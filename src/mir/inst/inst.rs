#![doc = r" Remusys-MIR Instruction Variant Definitions"]
#![doc = r" NOTE: This file is auto-generated from the RIG-DSL definitions."]
use super::*;
#[derive(Clone)]
pub enum MirInst {
    GuideNode(super::MirInstCommon),
    CondBr(super::impls::CondBr),
    CBZs(super::impls::CBZs),
    UncondBr(super::impls::UncondBr),
    BReg(super::impls::BReg),
    BLinkLabel(super::impls::BLinkLabel),
    BLinkGlobal(super::impls::BLinkGlobal),
    BLinkReg(super::impls::BLinkReg),
    TBZ64(super::impls::TBZ64),
    TBZ32(super::impls::TBZ32),
    ICmp64R(super::impls::ICmp64R),
    ICmp32R(super::impls::ICmp32R),
    ICmp64I(super::impls::ICmp64I),
    ICmp32I(super::impls::ICmp32I),
    FCmp32(super::impls::FCmp32),
    FCmp64(super::impls::FCmp64),
    ICCmp64R(super::impls::ICCmp64R),
    ICCmp32R(super::impls::ICCmp32R),
    ICCmp64I(super::impls::ICCmp64I),
    ICCmp32I(super::impls::ICCmp32I),
    FCCmp32(super::impls::FCCmp32),
    FCCmp64(super::impls::FCCmp64),
    Bin64R(super::impls::Bin64R),
    Bin32R(super::impls::Bin32R),
    MulL(super::impls::MulL),
    Bin64RC(super::impls::Bin64RC),
    Bin32RC(super::impls::Bin32RC),
    Bin64RSym(super::impls::Bin64RSym),
    Bin64RL(super::impls::Bin64RL),
    Bin32RL(super::impls::Bin32RL),
    Bin64RS(super::impls::Bin64RS),
    Bin64RU(super::impls::Bin64RU),
    Bin32RS(super::impls::Bin32RS),
    Bin32RU(super::impls::Bin32RU),
    Bin64RShift(super::impls::Bin64RShift),
    Bin32RShift(super::impls::Bin32RShift),
    BinF64R(super::impls::BinF64R),
    BinF32R(super::impls::BinF32R),
    MirCopy64(super::impls::MirCopy64),
    MirCopy32(super::impls::MirCopy32),
    MirFCopy64(super::impls::MirFCopy64),
    MirFCopy32(super::impls::MirFCopy32),
    MirPCopy(super::impls::MirPCopy),
    Una64R(super::impls::Una64R),
    Una32R(super::impls::Una32R),
    ExtR(super::impls::ExtR),
    Mov64I(super::impls::Mov64I),
    MovZNK64(super::impls::MovZNK64),
    Mov32I(super::impls::Mov32I),
    MovZNK32(super::impls::MovZNK32),
    Adr(super::impls::Adr),
    UnaFG64(super::impls::UnaFG64),
    UnaGF64(super::impls::UnaGF64),
    UnaF64G32(super::impls::UnaF64G32),
    UnaFG32(super::impls::UnaFG32),
    UnaF32G64(super::impls::UnaF32G64),
    UnaGF32(super::impls::UnaGF32),
    UnaG64F32(super::impls::UnaG64F32),
    UnaG32F64(super::impls::UnaG32F64),
    UnaF64(super::impls::UnaF64),
    UnaF32(super::impls::UnaF32),
    UnaryF32F64(super::impls::UnaryF32F64),
    UnaryF64F32(super::impls::UnaryF64F32),
    FMov64I(super::impls::FMov64I),
    FMov32I(super::impls::FMov32I),
    TenaryG64(super::impls::TenaryG64),
    TenaryG64G32(super::impls::TenaryG64G32),
    TenaryG32(super::impls::TenaryG32),
    TenaryF64(super::impls::TenaryF64),
    TenaryF32(super::impls::TenaryF32),
    LoadGr64(super::impls::LoadGr64),
    LoadG64G32(super::impls::LoadG64G32),
    LoadGr32(super::impls::LoadGr32),
    LoadF64(super::impls::LoadF64),
    LoadF32(super::impls::LoadF32),
    StoreGr64(super::impls::StoreGr64),
    StoreGr32(super::impls::StoreGr32),
    StoreF64(super::impls::StoreF64),
    StoreF32(super::impls::StoreF32),
    LoadGr64Base(super::impls::LoadGr64Base),
    LdrSWBase(super::impls::LdrSWBase),
    LoadGr32Base(super::impls::LoadGr32Base),
    LoadF64Base(super::impls::LoadF64Base),
    LoadF32Base(super::impls::LoadF32Base),
    LoadGr64BaseS(super::impls::LoadGr64BaseS),
    LoadGr32BaseS(super::impls::LoadGr32BaseS),
    LoadF64BaseS(super::impls::LoadF64BaseS),
    LoadF32BaseS(super::impls::LoadF32BaseS),
    StoreGr64Base(super::impls::StoreGr64Base),
    StoreGr32Base(super::impls::StoreGr32Base),
    StoreF64Base(super::impls::StoreF64Base),
    StoreF32Base(super::impls::StoreF32Base),
    StoreGr64BaseS(super::impls::StoreGr64BaseS),
    StoreGr32BaseS(super::impls::StoreGr32BaseS),
    StoreF64BaseS(super::impls::StoreF64BaseS),
    StoreF32BaseS(super::impls::StoreF32BaseS),
    LoadGr64Indexed(super::impls::LoadGr64Indexed),
    LoadGr32Indexed(super::impls::LoadGr32Indexed),
    LoadF64Indexed(super::impls::LoadF64Indexed),
    LoadF32Indexed(super::impls::LoadF32Indexed),
    StoreGr64Indexed(super::impls::StoreGr64Indexed),
    StoreGr32Indexed(super::impls::StoreGr32Indexed),
    StoreF64Indexed(super::impls::StoreF64Indexed),
    StoreF32Indexed(super::impls::StoreF32Indexed),
    LoadGr64Literal(super::impls::LoadGr64Literal),
    LoadGr32Literal(super::impls::LoadGr32Literal),
    LoadF64Literal(super::impls::LoadF64Literal),
    LoadF32Literal(super::impls::LoadF32Literal),
    MirLdrLitG64(super::impls::MirLdrLitG64),
    MirLdrLitG32(super::impls::MirLdrLitG32),
    MirLdrLitF64(super::impls::MirLdrLitF64),
    MirLdrLitF32(super::impls::MirLdrLitF32),
    MirStrLitG64(super::impls::MirStrLitG64),
    MirStrLitG32(super::impls::MirStrLitG32),
    MirStrLitF64(super::impls::MirStrLitF64),
    MirStrLitF32(super::impls::MirStrLitF32),
    MirStImm64(super::impls::MirStImm64),
    MirStSym64(super::impls::MirStSym64),
    MirStImm32(super::impls::MirStImm32),
    MirStImm64Sym(super::impls::MirStImm64Sym),
    MirStImm32Sym(super::impls::MirStImm32Sym),
    MirStSym64Sym(super::impls::MirStSym64Sym),
    LoadConst64(super::impls::LoadConst64),
    LoadConst64Symbol(super::impls::LoadConst64Symbol),
    MirLdImmF64(super::impls::MirLdImmF64),
    MirLdImmF32(super::impls::MirLdImmF32),
    CSel64(super::impls::CSel64),
    CSel32(super::impls::CSel32),
    CSelF64(super::impls::CSelF64),
    CSelF32(super::impls::CSelF32),
    CSet64(super::impls::CSet64),
    CSet32(super::impls::CSet32),
    MirCall(super::mirops::MirCall),
    MirReturn(super::mirops::MirReturn),
    MirSwitch(super::mirops::MirSwitch),
    MirSaveRegs(super::mirops::MirSaveRegs),
    MirRestoreRegs(super::mirops::MirRestoreRegs),
    MirRestoreHostRegs(super::mirops::MirRestoreHostRegs),
    MirGEP(super::mirops::MirGEP),
    MirComment(super::mirops::MirComment),
    MirCommentedInst(super::mirops::MirCommentedInst),
    MirFuncPrologue(super::mirops::MirFuncPrologue),
}
impl MirInst {
    pub fn get_common(&self) -> &super::MirInstCommon {
        match self {
            MirInst::GuideNode(common) => common,
            MirInst::CondBr(inst) => inst.get_common(),
            MirInst::CBZs(inst) => inst.get_common(),
            MirInst::UncondBr(inst) => inst.get_common(),
            MirInst::BReg(inst) => inst.get_common(),
            MirInst::BLinkLabel(inst) => inst.get_common(),
            MirInst::BLinkGlobal(inst) => inst.get_common(),
            MirInst::BLinkReg(inst) => inst.get_common(),
            MirInst::TBZ64(inst) => inst.get_common(),
            MirInst::TBZ32(inst) => inst.get_common(),
            MirInst::ICmp64R(inst) => inst.get_common(),
            MirInst::ICmp32R(inst) => inst.get_common(),
            MirInst::ICmp64I(inst) => inst.get_common(),
            MirInst::ICmp32I(inst) => inst.get_common(),
            MirInst::FCmp32(inst) => inst.get_common(),
            MirInst::FCmp64(inst) => inst.get_common(),
            MirInst::ICCmp64R(inst) => inst.get_common(),
            MirInst::ICCmp32R(inst) => inst.get_common(),
            MirInst::ICCmp64I(inst) => inst.get_common(),
            MirInst::ICCmp32I(inst) => inst.get_common(),
            MirInst::FCCmp32(inst) => inst.get_common(),
            MirInst::FCCmp64(inst) => inst.get_common(),
            MirInst::Bin64R(inst) => inst.get_common(),
            MirInst::Bin32R(inst) => inst.get_common(),
            MirInst::MulL(inst) => inst.get_common(),
            MirInst::Bin64RC(inst) => inst.get_common(),
            MirInst::Bin32RC(inst) => inst.get_common(),
            MirInst::Bin64RSym(inst) => inst.get_common(),
            MirInst::Bin64RL(inst) => inst.get_common(),
            MirInst::Bin32RL(inst) => inst.get_common(),
            MirInst::Bin64RS(inst) => inst.get_common(),
            MirInst::Bin64RU(inst) => inst.get_common(),
            MirInst::Bin32RS(inst) => inst.get_common(),
            MirInst::Bin32RU(inst) => inst.get_common(),
            MirInst::Bin64RShift(inst) => inst.get_common(),
            MirInst::Bin32RShift(inst) => inst.get_common(),
            MirInst::BinF64R(inst) => inst.get_common(),
            MirInst::BinF32R(inst) => inst.get_common(),
            MirInst::MirCopy64(inst) => inst.get_common(),
            MirInst::MirCopy32(inst) => inst.get_common(),
            MirInst::MirFCopy64(inst) => inst.get_common(),
            MirInst::MirFCopy32(inst) => inst.get_common(),
            MirInst::MirPCopy(inst) => inst.get_common(),
            MirInst::Una64R(inst) => inst.get_common(),
            MirInst::Una32R(inst) => inst.get_common(),
            MirInst::ExtR(inst) => inst.get_common(),
            MirInst::Mov64I(inst) => inst.get_common(),
            MirInst::MovZNK64(inst) => inst.get_common(),
            MirInst::Mov32I(inst) => inst.get_common(),
            MirInst::MovZNK32(inst) => inst.get_common(),
            MirInst::Adr(inst) => inst.get_common(),
            MirInst::UnaFG64(inst) => inst.get_common(),
            MirInst::UnaGF64(inst) => inst.get_common(),
            MirInst::UnaF64G32(inst) => inst.get_common(),
            MirInst::UnaFG32(inst) => inst.get_common(),
            MirInst::UnaF32G64(inst) => inst.get_common(),
            MirInst::UnaGF32(inst) => inst.get_common(),
            MirInst::UnaG64F32(inst) => inst.get_common(),
            MirInst::UnaG32F64(inst) => inst.get_common(),
            MirInst::UnaF64(inst) => inst.get_common(),
            MirInst::UnaF32(inst) => inst.get_common(),
            MirInst::UnaryF32F64(inst) => inst.get_common(),
            MirInst::UnaryF64F32(inst) => inst.get_common(),
            MirInst::FMov64I(inst) => inst.get_common(),
            MirInst::FMov32I(inst) => inst.get_common(),
            MirInst::TenaryG64(inst) => inst.get_common(),
            MirInst::TenaryG64G32(inst) => inst.get_common(),
            MirInst::TenaryG32(inst) => inst.get_common(),
            MirInst::TenaryF64(inst) => inst.get_common(),
            MirInst::TenaryF32(inst) => inst.get_common(),
            MirInst::LoadGr64(inst) => inst.get_common(),
            MirInst::LoadG64G32(inst) => inst.get_common(),
            MirInst::LoadGr32(inst) => inst.get_common(),
            MirInst::LoadF64(inst) => inst.get_common(),
            MirInst::LoadF32(inst) => inst.get_common(),
            MirInst::StoreGr64(inst) => inst.get_common(),
            MirInst::StoreGr32(inst) => inst.get_common(),
            MirInst::StoreF64(inst) => inst.get_common(),
            MirInst::StoreF32(inst) => inst.get_common(),
            MirInst::LoadGr64Base(inst) => inst.get_common(),
            MirInst::LdrSWBase(inst) => inst.get_common(),
            MirInst::LoadGr32Base(inst) => inst.get_common(),
            MirInst::LoadF64Base(inst) => inst.get_common(),
            MirInst::LoadF32Base(inst) => inst.get_common(),
            MirInst::LoadGr64BaseS(inst) => inst.get_common(),
            MirInst::LoadGr32BaseS(inst) => inst.get_common(),
            MirInst::LoadF64BaseS(inst) => inst.get_common(),
            MirInst::LoadF32BaseS(inst) => inst.get_common(),
            MirInst::StoreGr64Base(inst) => inst.get_common(),
            MirInst::StoreGr32Base(inst) => inst.get_common(),
            MirInst::StoreF64Base(inst) => inst.get_common(),
            MirInst::StoreF32Base(inst) => inst.get_common(),
            MirInst::StoreGr64BaseS(inst) => inst.get_common(),
            MirInst::StoreGr32BaseS(inst) => inst.get_common(),
            MirInst::StoreF64BaseS(inst) => inst.get_common(),
            MirInst::StoreF32BaseS(inst) => inst.get_common(),
            MirInst::LoadGr64Indexed(inst) => inst.get_common(),
            MirInst::LoadGr32Indexed(inst) => inst.get_common(),
            MirInst::LoadF64Indexed(inst) => inst.get_common(),
            MirInst::LoadF32Indexed(inst) => inst.get_common(),
            MirInst::StoreGr64Indexed(inst) => inst.get_common(),
            MirInst::StoreGr32Indexed(inst) => inst.get_common(),
            MirInst::StoreF64Indexed(inst) => inst.get_common(),
            MirInst::StoreF32Indexed(inst) => inst.get_common(),
            MirInst::LoadGr64Literal(inst) => inst.get_common(),
            MirInst::LoadGr32Literal(inst) => inst.get_common(),
            MirInst::LoadF64Literal(inst) => inst.get_common(),
            MirInst::LoadF32Literal(inst) => inst.get_common(),
            MirInst::MirLdrLitG64(inst) => inst.get_common(),
            MirInst::MirLdrLitG32(inst) => inst.get_common(),
            MirInst::MirLdrLitF64(inst) => inst.get_common(),
            MirInst::MirLdrLitF32(inst) => inst.get_common(),
            MirInst::MirStrLitG64(inst) => inst.get_common(),
            MirInst::MirStrLitG32(inst) => inst.get_common(),
            MirInst::MirStrLitF64(inst) => inst.get_common(),
            MirInst::MirStrLitF32(inst) => inst.get_common(),
            MirInst::MirStImm64(inst) => inst.get_common(),
            MirInst::MirStSym64(inst) => inst.get_common(),
            MirInst::MirStImm32(inst) => inst.get_common(),
            MirInst::MirStImm64Sym(inst) => inst.get_common(),
            MirInst::MirStImm32Sym(inst) => inst.get_common(),
            MirInst::MirStSym64Sym(inst) => inst.get_common(),
            MirInst::LoadConst64(inst) => inst.get_common(),
            MirInst::LoadConst64Symbol(inst) => inst.get_common(),
            MirInst::MirLdImmF64(inst) => inst.get_common(),
            MirInst::MirLdImmF32(inst) => inst.get_common(),
            MirInst::CSel64(inst) => inst.get_common(),
            MirInst::CSel32(inst) => inst.get_common(),
            MirInst::CSelF64(inst) => inst.get_common(),
            MirInst::CSelF32(inst) => inst.get_common(),
            MirInst::CSet64(inst) => inst.get_common(),
            MirInst::CSet32(inst) => inst.get_common(),
            MirInst::MirCall(inst) => inst.get_common(),
            MirInst::MirReturn(inst) => inst.get_common(),
            MirInst::MirSwitch(inst) => inst.get_common(),
            MirInst::MirSaveRegs(inst) => inst.get_common(),
            MirInst::MirRestoreRegs(inst) => inst.get_common(),
            MirInst::MirRestoreHostRegs(inst) => inst.get_common(),
            MirInst::MirGEP(inst) => inst.get_common(),
            MirInst::MirComment(inst) => inst.get_common(),
            MirInst::MirCommentedInst(inst) => inst.get_common(),
            MirInst::MirFuncPrologue(inst) => inst.get_common(),
        }
    }
    pub fn common_mut(&mut self) -> &mut super::MirInstCommon {
        match self {
            MirInst::GuideNode(common) => common,
            MirInst::CondBr(inst) => inst.common_mut(),
            MirInst::CBZs(inst) => inst.common_mut(),
            MirInst::UncondBr(inst) => inst.common_mut(),
            MirInst::BReg(inst) => inst.common_mut(),
            MirInst::BLinkLabel(inst) => inst.common_mut(),
            MirInst::BLinkGlobal(inst) => inst.common_mut(),
            MirInst::BLinkReg(inst) => inst.common_mut(),
            MirInst::TBZ64(inst) => inst.common_mut(),
            MirInst::TBZ32(inst) => inst.common_mut(),
            MirInst::ICmp64R(inst) => inst.common_mut(),
            MirInst::ICmp32R(inst) => inst.common_mut(),
            MirInst::ICmp64I(inst) => inst.common_mut(),
            MirInst::ICmp32I(inst) => inst.common_mut(),
            MirInst::FCmp32(inst) => inst.common_mut(),
            MirInst::FCmp64(inst) => inst.common_mut(),
            MirInst::ICCmp64R(inst) => inst.common_mut(),
            MirInst::ICCmp32R(inst) => inst.common_mut(),
            MirInst::ICCmp64I(inst) => inst.common_mut(),
            MirInst::ICCmp32I(inst) => inst.common_mut(),
            MirInst::FCCmp32(inst) => inst.common_mut(),
            MirInst::FCCmp64(inst) => inst.common_mut(),
            MirInst::Bin64R(inst) => inst.common_mut(),
            MirInst::Bin32R(inst) => inst.common_mut(),
            MirInst::MulL(inst) => inst.common_mut(),
            MirInst::Bin64RC(inst) => inst.common_mut(),
            MirInst::Bin32RC(inst) => inst.common_mut(),
            MirInst::Bin64RSym(inst) => inst.common_mut(),
            MirInst::Bin64RL(inst) => inst.common_mut(),
            MirInst::Bin32RL(inst) => inst.common_mut(),
            MirInst::Bin64RS(inst) => inst.common_mut(),
            MirInst::Bin64RU(inst) => inst.common_mut(),
            MirInst::Bin32RS(inst) => inst.common_mut(),
            MirInst::Bin32RU(inst) => inst.common_mut(),
            MirInst::Bin64RShift(inst) => inst.common_mut(),
            MirInst::Bin32RShift(inst) => inst.common_mut(),
            MirInst::BinF64R(inst) => inst.common_mut(),
            MirInst::BinF32R(inst) => inst.common_mut(),
            MirInst::MirCopy64(inst) => inst.common_mut(),
            MirInst::MirCopy32(inst) => inst.common_mut(),
            MirInst::MirFCopy64(inst) => inst.common_mut(),
            MirInst::MirFCopy32(inst) => inst.common_mut(),
            MirInst::MirPCopy(inst) => inst.common_mut(),
            MirInst::Una64R(inst) => inst.common_mut(),
            MirInst::Una32R(inst) => inst.common_mut(),
            MirInst::ExtR(inst) => inst.common_mut(),
            MirInst::Mov64I(inst) => inst.common_mut(),
            MirInst::MovZNK64(inst) => inst.common_mut(),
            MirInst::Mov32I(inst) => inst.common_mut(),
            MirInst::MovZNK32(inst) => inst.common_mut(),
            MirInst::Adr(inst) => inst.common_mut(),
            MirInst::UnaFG64(inst) => inst.common_mut(),
            MirInst::UnaGF64(inst) => inst.common_mut(),
            MirInst::UnaF64G32(inst) => inst.common_mut(),
            MirInst::UnaFG32(inst) => inst.common_mut(),
            MirInst::UnaF32G64(inst) => inst.common_mut(),
            MirInst::UnaGF32(inst) => inst.common_mut(),
            MirInst::UnaG64F32(inst) => inst.common_mut(),
            MirInst::UnaG32F64(inst) => inst.common_mut(),
            MirInst::UnaF64(inst) => inst.common_mut(),
            MirInst::UnaF32(inst) => inst.common_mut(),
            MirInst::UnaryF32F64(inst) => inst.common_mut(),
            MirInst::UnaryF64F32(inst) => inst.common_mut(),
            MirInst::FMov64I(inst) => inst.common_mut(),
            MirInst::FMov32I(inst) => inst.common_mut(),
            MirInst::TenaryG64(inst) => inst.common_mut(),
            MirInst::TenaryG64G32(inst) => inst.common_mut(),
            MirInst::TenaryG32(inst) => inst.common_mut(),
            MirInst::TenaryF64(inst) => inst.common_mut(),
            MirInst::TenaryF32(inst) => inst.common_mut(),
            MirInst::LoadGr64(inst) => inst.common_mut(),
            MirInst::LoadG64G32(inst) => inst.common_mut(),
            MirInst::LoadGr32(inst) => inst.common_mut(),
            MirInst::LoadF64(inst) => inst.common_mut(),
            MirInst::LoadF32(inst) => inst.common_mut(),
            MirInst::StoreGr64(inst) => inst.common_mut(),
            MirInst::StoreGr32(inst) => inst.common_mut(),
            MirInst::StoreF64(inst) => inst.common_mut(),
            MirInst::StoreF32(inst) => inst.common_mut(),
            MirInst::LoadGr64Base(inst) => inst.common_mut(),
            MirInst::LdrSWBase(inst) => inst.common_mut(),
            MirInst::LoadGr32Base(inst) => inst.common_mut(),
            MirInst::LoadF64Base(inst) => inst.common_mut(),
            MirInst::LoadF32Base(inst) => inst.common_mut(),
            MirInst::LoadGr64BaseS(inst) => inst.common_mut(),
            MirInst::LoadGr32BaseS(inst) => inst.common_mut(),
            MirInst::LoadF64BaseS(inst) => inst.common_mut(),
            MirInst::LoadF32BaseS(inst) => inst.common_mut(),
            MirInst::StoreGr64Base(inst) => inst.common_mut(),
            MirInst::StoreGr32Base(inst) => inst.common_mut(),
            MirInst::StoreF64Base(inst) => inst.common_mut(),
            MirInst::StoreF32Base(inst) => inst.common_mut(),
            MirInst::StoreGr64BaseS(inst) => inst.common_mut(),
            MirInst::StoreGr32BaseS(inst) => inst.common_mut(),
            MirInst::StoreF64BaseS(inst) => inst.common_mut(),
            MirInst::StoreF32BaseS(inst) => inst.common_mut(),
            MirInst::LoadGr64Indexed(inst) => inst.common_mut(),
            MirInst::LoadGr32Indexed(inst) => inst.common_mut(),
            MirInst::LoadF64Indexed(inst) => inst.common_mut(),
            MirInst::LoadF32Indexed(inst) => inst.common_mut(),
            MirInst::StoreGr64Indexed(inst) => inst.common_mut(),
            MirInst::StoreGr32Indexed(inst) => inst.common_mut(),
            MirInst::StoreF64Indexed(inst) => inst.common_mut(),
            MirInst::StoreF32Indexed(inst) => inst.common_mut(),
            MirInst::LoadGr64Literal(inst) => inst.common_mut(),
            MirInst::LoadGr32Literal(inst) => inst.common_mut(),
            MirInst::LoadF64Literal(inst) => inst.common_mut(),
            MirInst::LoadF32Literal(inst) => inst.common_mut(),
            MirInst::MirLdrLitG64(inst) => inst.common_mut(),
            MirInst::MirLdrLitG32(inst) => inst.common_mut(),
            MirInst::MirLdrLitF64(inst) => inst.common_mut(),
            MirInst::MirLdrLitF32(inst) => inst.common_mut(),
            MirInst::MirStrLitG64(inst) => inst.common_mut(),
            MirInst::MirStrLitG32(inst) => inst.common_mut(),
            MirInst::MirStrLitF64(inst) => inst.common_mut(),
            MirInst::MirStrLitF32(inst) => inst.common_mut(),
            MirInst::MirStImm64(inst) => inst.common_mut(),
            MirInst::MirStSym64(inst) => inst.common_mut(),
            MirInst::MirStImm32(inst) => inst.common_mut(),
            MirInst::MirStImm64Sym(inst) => inst.common_mut(),
            MirInst::MirStImm32Sym(inst) => inst.common_mut(),
            MirInst::MirStSym64Sym(inst) => inst.common_mut(),
            MirInst::LoadConst64(inst) => inst.common_mut(),
            MirInst::LoadConst64Symbol(inst) => inst.common_mut(),
            MirInst::MirLdImmF64(inst) => inst.common_mut(),
            MirInst::MirLdImmF32(inst) => inst.common_mut(),
            MirInst::CSel64(inst) => inst.common_mut(),
            MirInst::CSel32(inst) => inst.common_mut(),
            MirInst::CSelF64(inst) => inst.common_mut(),
            MirInst::CSelF32(inst) => inst.common_mut(),
            MirInst::CSet64(inst) => inst.common_mut(),
            MirInst::CSet32(inst) => inst.common_mut(),
            MirInst::MirCall(inst) => inst.common_mut(),
            MirInst::MirReturn(inst) => inst.common_mut(),
            MirInst::MirSwitch(inst) => inst.common_mut(),
            MirInst::MirSaveRegs(inst) => inst.common_mut(),
            MirInst::MirRestoreRegs(inst) => inst.common_mut(),
            MirInst::MirRestoreHostRegs(inst) => inst.common_mut(),
            MirInst::MirGEP(inst) => inst.common_mut(),
            MirInst::MirComment(inst) => inst.common_mut(),
            MirInst::MirCommentedInst(inst) => inst.common_mut(),
            MirInst::MirFuncPrologue(inst) => inst.common_mut(),
        }
    }
    #[doc = "Returns the opcode of the instruction. This is useful for matching or dispatching logic."]
    pub fn get_opcode(&self) -> MirOP {
        self.get_common().opcode
    }
    pub fn in_operands(&self) -> &[Cell<MirOperand>] {
        match self {
            MirInst::GuideNode(_) => &[],
            MirInst::CondBr(inst) => inst.in_operands(),
            MirInst::CBZs(inst) => inst.in_operands(),
            MirInst::UncondBr(inst) => inst.in_operands(),
            MirInst::BReg(inst) => inst.in_operands(),
            MirInst::BLinkLabel(inst) => inst.in_operands(),
            MirInst::BLinkGlobal(inst) => inst.in_operands(),
            MirInst::BLinkReg(inst) => inst.in_operands(),
            MirInst::TBZ64(inst) => inst.in_operands(),
            MirInst::TBZ32(inst) => inst.in_operands(),
            MirInst::ICmp64R(inst) => inst.in_operands(),
            MirInst::ICmp32R(inst) => inst.in_operands(),
            MirInst::ICmp64I(inst) => inst.in_operands(),
            MirInst::ICmp32I(inst) => inst.in_operands(),
            MirInst::FCmp32(inst) => inst.in_operands(),
            MirInst::FCmp64(inst) => inst.in_operands(),
            MirInst::ICCmp64R(inst) => inst.in_operands(),
            MirInst::ICCmp32R(inst) => inst.in_operands(),
            MirInst::ICCmp64I(inst) => inst.in_operands(),
            MirInst::ICCmp32I(inst) => inst.in_operands(),
            MirInst::FCCmp32(inst) => inst.in_operands(),
            MirInst::FCCmp64(inst) => inst.in_operands(),
            MirInst::Bin64R(inst) => inst.in_operands(),
            MirInst::Bin32R(inst) => inst.in_operands(),
            MirInst::MulL(inst) => inst.in_operands(),
            MirInst::Bin64RC(inst) => inst.in_operands(),
            MirInst::Bin32RC(inst) => inst.in_operands(),
            MirInst::Bin64RSym(inst) => inst.in_operands(),
            MirInst::Bin64RL(inst) => inst.in_operands(),
            MirInst::Bin32RL(inst) => inst.in_operands(),
            MirInst::Bin64RS(inst) => inst.in_operands(),
            MirInst::Bin64RU(inst) => inst.in_operands(),
            MirInst::Bin32RS(inst) => inst.in_operands(),
            MirInst::Bin32RU(inst) => inst.in_operands(),
            MirInst::Bin64RShift(inst) => inst.in_operands(),
            MirInst::Bin32RShift(inst) => inst.in_operands(),
            MirInst::BinF64R(inst) => inst.in_operands(),
            MirInst::BinF32R(inst) => inst.in_operands(),
            MirInst::MirCopy64(inst) => inst.in_operands(),
            MirInst::MirCopy32(inst) => inst.in_operands(),
            MirInst::MirFCopy64(inst) => inst.in_operands(),
            MirInst::MirFCopy32(inst) => inst.in_operands(),
            MirInst::MirPCopy(inst) => inst.in_operands(),
            MirInst::Una64R(inst) => inst.in_operands(),
            MirInst::Una32R(inst) => inst.in_operands(),
            MirInst::ExtR(inst) => inst.in_operands(),
            MirInst::Mov64I(inst) => inst.in_operands(),
            MirInst::MovZNK64(inst) => inst.in_operands(),
            MirInst::Mov32I(inst) => inst.in_operands(),
            MirInst::MovZNK32(inst) => inst.in_operands(),
            MirInst::Adr(inst) => inst.in_operands(),
            MirInst::UnaFG64(inst) => inst.in_operands(),
            MirInst::UnaGF64(inst) => inst.in_operands(),
            MirInst::UnaF64G32(inst) => inst.in_operands(),
            MirInst::UnaFG32(inst) => inst.in_operands(),
            MirInst::UnaF32G64(inst) => inst.in_operands(),
            MirInst::UnaGF32(inst) => inst.in_operands(),
            MirInst::UnaG64F32(inst) => inst.in_operands(),
            MirInst::UnaG32F64(inst) => inst.in_operands(),
            MirInst::UnaF64(inst) => inst.in_operands(),
            MirInst::UnaF32(inst) => inst.in_operands(),
            MirInst::UnaryF32F64(inst) => inst.in_operands(),
            MirInst::UnaryF64F32(inst) => inst.in_operands(),
            MirInst::FMov64I(inst) => inst.in_operands(),
            MirInst::FMov32I(inst) => inst.in_operands(),
            MirInst::TenaryG64(inst) => inst.in_operands(),
            MirInst::TenaryG64G32(inst) => inst.in_operands(),
            MirInst::TenaryG32(inst) => inst.in_operands(),
            MirInst::TenaryF64(inst) => inst.in_operands(),
            MirInst::TenaryF32(inst) => inst.in_operands(),
            MirInst::LoadGr64(inst) => inst.in_operands(),
            MirInst::LoadG64G32(inst) => inst.in_operands(),
            MirInst::LoadGr32(inst) => inst.in_operands(),
            MirInst::LoadF64(inst) => inst.in_operands(),
            MirInst::LoadF32(inst) => inst.in_operands(),
            MirInst::StoreGr64(inst) => inst.in_operands(),
            MirInst::StoreGr32(inst) => inst.in_operands(),
            MirInst::StoreF64(inst) => inst.in_operands(),
            MirInst::StoreF32(inst) => inst.in_operands(),
            MirInst::LoadGr64Base(inst) => inst.in_operands(),
            MirInst::LdrSWBase(inst) => inst.in_operands(),
            MirInst::LoadGr32Base(inst) => inst.in_operands(),
            MirInst::LoadF64Base(inst) => inst.in_operands(),
            MirInst::LoadF32Base(inst) => inst.in_operands(),
            MirInst::LoadGr64BaseS(inst) => inst.in_operands(),
            MirInst::LoadGr32BaseS(inst) => inst.in_operands(),
            MirInst::LoadF64BaseS(inst) => inst.in_operands(),
            MirInst::LoadF32BaseS(inst) => inst.in_operands(),
            MirInst::StoreGr64Base(inst) => inst.in_operands(),
            MirInst::StoreGr32Base(inst) => inst.in_operands(),
            MirInst::StoreF64Base(inst) => inst.in_operands(),
            MirInst::StoreF32Base(inst) => inst.in_operands(),
            MirInst::StoreGr64BaseS(inst) => inst.in_operands(),
            MirInst::StoreGr32BaseS(inst) => inst.in_operands(),
            MirInst::StoreF64BaseS(inst) => inst.in_operands(),
            MirInst::StoreF32BaseS(inst) => inst.in_operands(),
            MirInst::LoadGr64Indexed(inst) => inst.in_operands(),
            MirInst::LoadGr32Indexed(inst) => inst.in_operands(),
            MirInst::LoadF64Indexed(inst) => inst.in_operands(),
            MirInst::LoadF32Indexed(inst) => inst.in_operands(),
            MirInst::StoreGr64Indexed(inst) => inst.in_operands(),
            MirInst::StoreGr32Indexed(inst) => inst.in_operands(),
            MirInst::StoreF64Indexed(inst) => inst.in_operands(),
            MirInst::StoreF32Indexed(inst) => inst.in_operands(),
            MirInst::LoadGr64Literal(inst) => inst.in_operands(),
            MirInst::LoadGr32Literal(inst) => inst.in_operands(),
            MirInst::LoadF64Literal(inst) => inst.in_operands(),
            MirInst::LoadF32Literal(inst) => inst.in_operands(),
            MirInst::MirLdrLitG64(inst) => inst.in_operands(),
            MirInst::MirLdrLitG32(inst) => inst.in_operands(),
            MirInst::MirLdrLitF64(inst) => inst.in_operands(),
            MirInst::MirLdrLitF32(inst) => inst.in_operands(),
            MirInst::MirStrLitG64(inst) => inst.in_operands(),
            MirInst::MirStrLitG32(inst) => inst.in_operands(),
            MirInst::MirStrLitF64(inst) => inst.in_operands(),
            MirInst::MirStrLitF32(inst) => inst.in_operands(),
            MirInst::MirStImm64(inst) => inst.in_operands(),
            MirInst::MirStSym64(inst) => inst.in_operands(),
            MirInst::MirStImm32(inst) => inst.in_operands(),
            MirInst::MirStImm64Sym(inst) => inst.in_operands(),
            MirInst::MirStImm32Sym(inst) => inst.in_operands(),
            MirInst::MirStSym64Sym(inst) => inst.in_operands(),
            MirInst::LoadConst64(inst) => inst.in_operands(),
            MirInst::LoadConst64Symbol(inst) => inst.in_operands(),
            MirInst::MirLdImmF64(inst) => inst.in_operands(),
            MirInst::MirLdImmF32(inst) => inst.in_operands(),
            MirInst::CSel64(inst) => inst.in_operands(),
            MirInst::CSel32(inst) => inst.in_operands(),
            MirInst::CSelF64(inst) => inst.in_operands(),
            MirInst::CSelF32(inst) => inst.in_operands(),
            MirInst::CSet64(inst) => inst.in_operands(),
            MirInst::CSet32(inst) => inst.in_operands(),
            MirInst::MirCall(inst) => inst.in_operands(),
            MirInst::MirReturn(inst) => inst.in_operands(),
            MirInst::MirSwitch(inst) => inst.in_operands(),
            MirInst::MirSaveRegs(inst) => inst.in_operands(),
            MirInst::MirRestoreRegs(inst) => inst.in_operands(),
            MirInst::MirRestoreHostRegs(inst) => inst.in_operands(),
            MirInst::MirGEP(inst) => inst.in_operands(),
            MirInst::MirComment(inst) => inst.in_operands(),
            MirInst::MirCommentedInst(inst) => inst.in_operands(),
            MirInst::MirFuncPrologue(inst) => inst.in_operands(),
        }
    }
    pub fn out_operands(&self) -> &[Cell<MirOperand>] {
        match self {
            MirInst::GuideNode(_) => &[],
            MirInst::CondBr(inst) => inst.out_operands(),
            MirInst::CBZs(inst) => inst.out_operands(),
            MirInst::UncondBr(inst) => inst.out_operands(),
            MirInst::BReg(inst) => inst.out_operands(),
            MirInst::BLinkLabel(inst) => inst.out_operands(),
            MirInst::BLinkGlobal(inst) => inst.out_operands(),
            MirInst::BLinkReg(inst) => inst.out_operands(),
            MirInst::TBZ64(inst) => inst.out_operands(),
            MirInst::TBZ32(inst) => inst.out_operands(),
            MirInst::ICmp64R(inst) => inst.out_operands(),
            MirInst::ICmp32R(inst) => inst.out_operands(),
            MirInst::ICmp64I(inst) => inst.out_operands(),
            MirInst::ICmp32I(inst) => inst.out_operands(),
            MirInst::FCmp32(inst) => inst.out_operands(),
            MirInst::FCmp64(inst) => inst.out_operands(),
            MirInst::ICCmp64R(inst) => inst.out_operands(),
            MirInst::ICCmp32R(inst) => inst.out_operands(),
            MirInst::ICCmp64I(inst) => inst.out_operands(),
            MirInst::ICCmp32I(inst) => inst.out_operands(),
            MirInst::FCCmp32(inst) => inst.out_operands(),
            MirInst::FCCmp64(inst) => inst.out_operands(),
            MirInst::Bin64R(inst) => inst.out_operands(),
            MirInst::Bin32R(inst) => inst.out_operands(),
            MirInst::MulL(inst) => inst.out_operands(),
            MirInst::Bin64RC(inst) => inst.out_operands(),
            MirInst::Bin32RC(inst) => inst.out_operands(),
            MirInst::Bin64RSym(inst) => inst.out_operands(),
            MirInst::Bin64RL(inst) => inst.out_operands(),
            MirInst::Bin32RL(inst) => inst.out_operands(),
            MirInst::Bin64RS(inst) => inst.out_operands(),
            MirInst::Bin64RU(inst) => inst.out_operands(),
            MirInst::Bin32RS(inst) => inst.out_operands(),
            MirInst::Bin32RU(inst) => inst.out_operands(),
            MirInst::Bin64RShift(inst) => inst.out_operands(),
            MirInst::Bin32RShift(inst) => inst.out_operands(),
            MirInst::BinF64R(inst) => inst.out_operands(),
            MirInst::BinF32R(inst) => inst.out_operands(),
            MirInst::MirCopy64(inst) => inst.out_operands(),
            MirInst::MirCopy32(inst) => inst.out_operands(),
            MirInst::MirFCopy64(inst) => inst.out_operands(),
            MirInst::MirFCopy32(inst) => inst.out_operands(),
            MirInst::MirPCopy(inst) => inst.out_operands(),
            MirInst::Una64R(inst) => inst.out_operands(),
            MirInst::Una32R(inst) => inst.out_operands(),
            MirInst::ExtR(inst) => inst.out_operands(),
            MirInst::Mov64I(inst) => inst.out_operands(),
            MirInst::MovZNK64(inst) => inst.out_operands(),
            MirInst::Mov32I(inst) => inst.out_operands(),
            MirInst::MovZNK32(inst) => inst.out_operands(),
            MirInst::Adr(inst) => inst.out_operands(),
            MirInst::UnaFG64(inst) => inst.out_operands(),
            MirInst::UnaGF64(inst) => inst.out_operands(),
            MirInst::UnaF64G32(inst) => inst.out_operands(),
            MirInst::UnaFG32(inst) => inst.out_operands(),
            MirInst::UnaF32G64(inst) => inst.out_operands(),
            MirInst::UnaGF32(inst) => inst.out_operands(),
            MirInst::UnaG64F32(inst) => inst.out_operands(),
            MirInst::UnaG32F64(inst) => inst.out_operands(),
            MirInst::UnaF64(inst) => inst.out_operands(),
            MirInst::UnaF32(inst) => inst.out_operands(),
            MirInst::UnaryF32F64(inst) => inst.out_operands(),
            MirInst::UnaryF64F32(inst) => inst.out_operands(),
            MirInst::FMov64I(inst) => inst.out_operands(),
            MirInst::FMov32I(inst) => inst.out_operands(),
            MirInst::TenaryG64(inst) => inst.out_operands(),
            MirInst::TenaryG64G32(inst) => inst.out_operands(),
            MirInst::TenaryG32(inst) => inst.out_operands(),
            MirInst::TenaryF64(inst) => inst.out_operands(),
            MirInst::TenaryF32(inst) => inst.out_operands(),
            MirInst::LoadGr64(inst) => inst.out_operands(),
            MirInst::LoadG64G32(inst) => inst.out_operands(),
            MirInst::LoadGr32(inst) => inst.out_operands(),
            MirInst::LoadF64(inst) => inst.out_operands(),
            MirInst::LoadF32(inst) => inst.out_operands(),
            MirInst::StoreGr64(inst) => inst.out_operands(),
            MirInst::StoreGr32(inst) => inst.out_operands(),
            MirInst::StoreF64(inst) => inst.out_operands(),
            MirInst::StoreF32(inst) => inst.out_operands(),
            MirInst::LoadGr64Base(inst) => inst.out_operands(),
            MirInst::LdrSWBase(inst) => inst.out_operands(),
            MirInst::LoadGr32Base(inst) => inst.out_operands(),
            MirInst::LoadF64Base(inst) => inst.out_operands(),
            MirInst::LoadF32Base(inst) => inst.out_operands(),
            MirInst::LoadGr64BaseS(inst) => inst.out_operands(),
            MirInst::LoadGr32BaseS(inst) => inst.out_operands(),
            MirInst::LoadF64BaseS(inst) => inst.out_operands(),
            MirInst::LoadF32BaseS(inst) => inst.out_operands(),
            MirInst::StoreGr64Base(inst) => inst.out_operands(),
            MirInst::StoreGr32Base(inst) => inst.out_operands(),
            MirInst::StoreF64Base(inst) => inst.out_operands(),
            MirInst::StoreF32Base(inst) => inst.out_operands(),
            MirInst::StoreGr64BaseS(inst) => inst.out_operands(),
            MirInst::StoreGr32BaseS(inst) => inst.out_operands(),
            MirInst::StoreF64BaseS(inst) => inst.out_operands(),
            MirInst::StoreF32BaseS(inst) => inst.out_operands(),
            MirInst::LoadGr64Indexed(inst) => inst.out_operands(),
            MirInst::LoadGr32Indexed(inst) => inst.out_operands(),
            MirInst::LoadF64Indexed(inst) => inst.out_operands(),
            MirInst::LoadF32Indexed(inst) => inst.out_operands(),
            MirInst::StoreGr64Indexed(inst) => inst.out_operands(),
            MirInst::StoreGr32Indexed(inst) => inst.out_operands(),
            MirInst::StoreF64Indexed(inst) => inst.out_operands(),
            MirInst::StoreF32Indexed(inst) => inst.out_operands(),
            MirInst::LoadGr64Literal(inst) => inst.out_operands(),
            MirInst::LoadGr32Literal(inst) => inst.out_operands(),
            MirInst::LoadF64Literal(inst) => inst.out_operands(),
            MirInst::LoadF32Literal(inst) => inst.out_operands(),
            MirInst::MirLdrLitG64(inst) => inst.out_operands(),
            MirInst::MirLdrLitG32(inst) => inst.out_operands(),
            MirInst::MirLdrLitF64(inst) => inst.out_operands(),
            MirInst::MirLdrLitF32(inst) => inst.out_operands(),
            MirInst::MirStrLitG64(inst) => inst.out_operands(),
            MirInst::MirStrLitG32(inst) => inst.out_operands(),
            MirInst::MirStrLitF64(inst) => inst.out_operands(),
            MirInst::MirStrLitF32(inst) => inst.out_operands(),
            MirInst::MirStImm64(inst) => inst.out_operands(),
            MirInst::MirStSym64(inst) => inst.out_operands(),
            MirInst::MirStImm32(inst) => inst.out_operands(),
            MirInst::MirStImm64Sym(inst) => inst.out_operands(),
            MirInst::MirStImm32Sym(inst) => inst.out_operands(),
            MirInst::MirStSym64Sym(inst) => inst.out_operands(),
            MirInst::LoadConst64(inst) => inst.out_operands(),
            MirInst::LoadConst64Symbol(inst) => inst.out_operands(),
            MirInst::MirLdImmF64(inst) => inst.out_operands(),
            MirInst::MirLdImmF32(inst) => inst.out_operands(),
            MirInst::CSel64(inst) => inst.out_operands(),
            MirInst::CSel32(inst) => inst.out_operands(),
            MirInst::CSelF64(inst) => inst.out_operands(),
            MirInst::CSelF32(inst) => inst.out_operands(),
            MirInst::CSet64(inst) => inst.out_operands(),
            MirInst::CSet32(inst) => inst.out_operands(),
            MirInst::MirCall(inst) => inst.out_operands(),
            MirInst::MirReturn(inst) => inst.out_operands(),
            MirInst::MirSwitch(inst) => inst.out_operands(),
            MirInst::MirSaveRegs(inst) => inst.out_operands(),
            MirInst::MirRestoreRegs(inst) => inst.out_operands(),
            MirInst::MirRestoreHostRegs(inst) => inst.out_operands(),
            MirInst::MirGEP(inst) => inst.out_operands(),
            MirInst::MirComment(inst) => inst.out_operands(),
            MirInst::MirCommentedInst(inst) => inst.out_operands(),
            MirInst::MirFuncPrologue(inst) => inst.out_operands(),
        }
    }
}
impl std::fmt::Debug for MirInst {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            MirInst::GuideNode(common) => common.fmt(f),
            MirInst::CondBr(inst) => inst.fmt(f),
            MirInst::CBZs(inst) => inst.fmt(f),
            MirInst::UncondBr(inst) => inst.fmt(f),
            MirInst::BReg(inst) => inst.fmt(f),
            MirInst::BLinkLabel(inst) => inst.fmt(f),
            MirInst::BLinkGlobal(inst) => inst.fmt(f),
            MirInst::BLinkReg(inst) => inst.fmt(f),
            MirInst::TBZ64(inst) => inst.fmt(f),
            MirInst::TBZ32(inst) => inst.fmt(f),
            MirInst::ICmp64R(inst) => inst.fmt(f),
            MirInst::ICmp32R(inst) => inst.fmt(f),
            MirInst::ICmp64I(inst) => inst.fmt(f),
            MirInst::ICmp32I(inst) => inst.fmt(f),
            MirInst::FCmp32(inst) => inst.fmt(f),
            MirInst::FCmp64(inst) => inst.fmt(f),
            MirInst::ICCmp64R(inst) => inst.fmt(f),
            MirInst::ICCmp32R(inst) => inst.fmt(f),
            MirInst::ICCmp64I(inst) => inst.fmt(f),
            MirInst::ICCmp32I(inst) => inst.fmt(f),
            MirInst::FCCmp32(inst) => inst.fmt(f),
            MirInst::FCCmp64(inst) => inst.fmt(f),
            MirInst::Bin64R(inst) => inst.fmt(f),
            MirInst::Bin32R(inst) => inst.fmt(f),
            MirInst::MulL(inst) => inst.fmt(f),
            MirInst::Bin64RC(inst) => inst.fmt(f),
            MirInst::Bin32RC(inst) => inst.fmt(f),
            MirInst::Bin64RSym(inst) => inst.fmt(f),
            MirInst::Bin64RL(inst) => inst.fmt(f),
            MirInst::Bin32RL(inst) => inst.fmt(f),
            MirInst::Bin64RS(inst) => inst.fmt(f),
            MirInst::Bin64RU(inst) => inst.fmt(f),
            MirInst::Bin32RS(inst) => inst.fmt(f),
            MirInst::Bin32RU(inst) => inst.fmt(f),
            MirInst::Bin64RShift(inst) => inst.fmt(f),
            MirInst::Bin32RShift(inst) => inst.fmt(f),
            MirInst::BinF64R(inst) => inst.fmt(f),
            MirInst::BinF32R(inst) => inst.fmt(f),
            MirInst::MirCopy64(inst) => inst.fmt(f),
            MirInst::MirCopy32(inst) => inst.fmt(f),
            MirInst::MirFCopy64(inst) => inst.fmt(f),
            MirInst::MirFCopy32(inst) => inst.fmt(f),
            MirInst::MirPCopy(inst) => inst.fmt(f),
            MirInst::Una64R(inst) => inst.fmt(f),
            MirInst::Una32R(inst) => inst.fmt(f),
            MirInst::ExtR(inst) => inst.fmt(f),
            MirInst::Mov64I(inst) => inst.fmt(f),
            MirInst::MovZNK64(inst) => inst.fmt(f),
            MirInst::Mov32I(inst) => inst.fmt(f),
            MirInst::MovZNK32(inst) => inst.fmt(f),
            MirInst::Adr(inst) => inst.fmt(f),
            MirInst::UnaFG64(inst) => inst.fmt(f),
            MirInst::UnaGF64(inst) => inst.fmt(f),
            MirInst::UnaF64G32(inst) => inst.fmt(f),
            MirInst::UnaFG32(inst) => inst.fmt(f),
            MirInst::UnaF32G64(inst) => inst.fmt(f),
            MirInst::UnaGF32(inst) => inst.fmt(f),
            MirInst::UnaG64F32(inst) => inst.fmt(f),
            MirInst::UnaG32F64(inst) => inst.fmt(f),
            MirInst::UnaF64(inst) => inst.fmt(f),
            MirInst::UnaF32(inst) => inst.fmt(f),
            MirInst::UnaryF32F64(inst) => inst.fmt(f),
            MirInst::UnaryF64F32(inst) => inst.fmt(f),
            MirInst::FMov64I(inst) => inst.fmt(f),
            MirInst::FMov32I(inst) => inst.fmt(f),
            MirInst::TenaryG64(inst) => inst.fmt(f),
            MirInst::TenaryG64G32(inst) => inst.fmt(f),
            MirInst::TenaryG32(inst) => inst.fmt(f),
            MirInst::TenaryF64(inst) => inst.fmt(f),
            MirInst::TenaryF32(inst) => inst.fmt(f),
            MirInst::LoadGr64(inst) => inst.fmt(f),
            MirInst::LoadG64G32(inst) => inst.fmt(f),
            MirInst::LoadGr32(inst) => inst.fmt(f),
            MirInst::LoadF64(inst) => inst.fmt(f),
            MirInst::LoadF32(inst) => inst.fmt(f),
            MirInst::StoreGr64(inst) => inst.fmt(f),
            MirInst::StoreGr32(inst) => inst.fmt(f),
            MirInst::StoreF64(inst) => inst.fmt(f),
            MirInst::StoreF32(inst) => inst.fmt(f),
            MirInst::LoadGr64Base(inst) => inst.fmt(f),
            MirInst::LdrSWBase(inst) => inst.fmt(f),
            MirInst::LoadGr32Base(inst) => inst.fmt(f),
            MirInst::LoadF64Base(inst) => inst.fmt(f),
            MirInst::LoadF32Base(inst) => inst.fmt(f),
            MirInst::LoadGr64BaseS(inst) => inst.fmt(f),
            MirInst::LoadGr32BaseS(inst) => inst.fmt(f),
            MirInst::LoadF64BaseS(inst) => inst.fmt(f),
            MirInst::LoadF32BaseS(inst) => inst.fmt(f),
            MirInst::StoreGr64Base(inst) => inst.fmt(f),
            MirInst::StoreGr32Base(inst) => inst.fmt(f),
            MirInst::StoreF64Base(inst) => inst.fmt(f),
            MirInst::StoreF32Base(inst) => inst.fmt(f),
            MirInst::StoreGr64BaseS(inst) => inst.fmt(f),
            MirInst::StoreGr32BaseS(inst) => inst.fmt(f),
            MirInst::StoreF64BaseS(inst) => inst.fmt(f),
            MirInst::StoreF32BaseS(inst) => inst.fmt(f),
            MirInst::LoadGr64Indexed(inst) => inst.fmt(f),
            MirInst::LoadGr32Indexed(inst) => inst.fmt(f),
            MirInst::LoadF64Indexed(inst) => inst.fmt(f),
            MirInst::LoadF32Indexed(inst) => inst.fmt(f),
            MirInst::StoreGr64Indexed(inst) => inst.fmt(f),
            MirInst::StoreGr32Indexed(inst) => inst.fmt(f),
            MirInst::StoreF64Indexed(inst) => inst.fmt(f),
            MirInst::StoreF32Indexed(inst) => inst.fmt(f),
            MirInst::LoadGr64Literal(inst) => inst.fmt(f),
            MirInst::LoadGr32Literal(inst) => inst.fmt(f),
            MirInst::LoadF64Literal(inst) => inst.fmt(f),
            MirInst::LoadF32Literal(inst) => inst.fmt(f),
            MirInst::MirLdrLitG64(inst) => inst.fmt(f),
            MirInst::MirLdrLitG32(inst) => inst.fmt(f),
            MirInst::MirLdrLitF64(inst) => inst.fmt(f),
            MirInst::MirLdrLitF32(inst) => inst.fmt(f),
            MirInst::MirStrLitG64(inst) => inst.fmt(f),
            MirInst::MirStrLitG32(inst) => inst.fmt(f),
            MirInst::MirStrLitF64(inst) => inst.fmt(f),
            MirInst::MirStrLitF32(inst) => inst.fmt(f),
            MirInst::MirStImm64(inst) => inst.fmt(f),
            MirInst::MirStSym64(inst) => inst.fmt(f),
            MirInst::MirStImm32(inst) => inst.fmt(f),
            MirInst::MirStImm64Sym(inst) => inst.fmt(f),
            MirInst::MirStImm32Sym(inst) => inst.fmt(f),
            MirInst::MirStSym64Sym(inst) => inst.fmt(f),
            MirInst::LoadConst64(inst) => inst.fmt(f),
            MirInst::LoadConst64Symbol(inst) => inst.fmt(f),
            MirInst::MirLdImmF64(inst) => inst.fmt(f),
            MirInst::MirLdImmF32(inst) => inst.fmt(f),
            MirInst::CSel64(inst) => inst.fmt(f),
            MirInst::CSel32(inst) => inst.fmt(f),
            MirInst::CSelF64(inst) => inst.fmt(f),
            MirInst::CSelF32(inst) => inst.fmt(f),
            MirInst::CSet64(inst) => inst.fmt(f),
            MirInst::CSet32(inst) => inst.fmt(f),
            MirInst::MirCall(inst) => inst.fmt(f),
            MirInst::MirReturn(inst) => inst.fmt(f),
            MirInst::MirSwitch(inst) => inst.fmt(f),
            MirInst::MirSaveRegs(inst) => inst.fmt(f),
            MirInst::MirRestoreRegs(inst) => inst.fmt(f),
            MirInst::MirRestoreHostRegs(inst) => inst.fmt(f),
            MirInst::MirGEP(inst) => inst.fmt(f),
            MirInst::MirComment(inst) => inst.fmt(f),
            MirInst::MirCommentedInst(inst) => inst.fmt(f),
            MirInst::MirFuncPrologue(inst) => inst.fmt(f),
        }
    }
}
impl crate::base::SlabListNode for MirInst {
    fn new_guide() -> Self {
        MirInst::GuideNode(super::MirInstCommon::new_guide())
    }
    fn load_node_head(&self) -> crate::base::SlabListNodeHead {
        self.get_common().node_head.get()
    }
    fn store_node_head(&self, head: crate::base::SlabListNodeHead) {
        self.get_common().node_head.set(head);
    }
}
