#![doc = r" Remusys-MIR Instruction Opcode Definitions"]
#![doc = r" NOTE: This file is auto-generated from the RIG-DSL definitions."]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum MirOP {
    Ror32R,
    SCvtF32,
    LoadConst64,
    FCvtMS64F32,
    MovZ64,
    SMSubL,
    CBZ,
    And32I,
    Mov32R,
    CLZ64,
    FMovFG32,
    FMov32R,
    UMin32I,
    Lsl32R,
    Bic64I,
    Asr64R,
    FCvtMS64,
    FRInt64X32,
    SMin32I,
    UXTH64,
    And64I,
    StrF64,
    LdrSBGr64Base,
    FNeg64,
    Abs64R,
    StrF32Literal,
    LdrGr64,
    ICmp64R,
    StrGr32Indexed,
    StrBGr64Literal,
    UMin32R,
    LdrBGr64Base,
    FCCmp32,
    FCvtAU32F64,
    MNeg64,
    FMov64R,
    LdrBGr32Literal,
    FNMul64,
    LdrF64Literal,
    MNeg32,
    FRIntZ32X32,
    CLZ32,
    ICCmp32R,
    LoadConstF64,
    FCCmpE32,
    Ror64R,
    UMax32R,
    SMulH,
    MVN32R,
    Ror32I,
    FMul32,
    CLS32,
    EOR32I,
    UMAddL,
    FRIntI32,
    ICCmp64I,
    LdrSBGr64Indexed,
    SMULL,
    EOR32R,
    ORR64I,
    RBit64,
    FCvtMS32,
    LdrGr32Base,
    LdrSHGr32Indexed,
    LdrBGr32Base,
    SXTB64,
    FMovFG64,
    CLS64,
    FRInt32X32,
    MSub32,
    LdrF64Base,
    LdrSHGr32,
    UMax32I,
    StrBGr64,
    And64R,
    LdrF64Indexed,
    StrHGr32Indexed,
    ICCmp32I,
    FNMSub32,
    Lsr32I,
    FRIntZ32,
    SXTW64,
    MovZ32,
    LdrF32Base,
    ICmp32R,
    Mov32I,
    ICmn32R,
    TBNZ,
    SXTH64,
    StrHGr64Base,
    LdrGr64Indexed,
    LdrSHGr64Literal,
    StrHGr64Literal,
    EON32I,
    MirSwitch,
    FCvtMU64,
    FRIntP64,
    StrHGr32Base,
    SMAddL,
    FNMul32,
    UMax64I,
    FDiv64,
    Lsl64R,
    MirCopy64,
    FMov32I,
    FRIntM32,
    EOR64R,
    Mul32,
    Sub32I,
    AdrP,
    UMSubL,
    ICCmn64I,
    EON64R,
    FAbs32,
    FCvtNU64F32,
    FNMAdd32,
    LdrF32Indexed,
    Asr64I,
    MAdd32,
    FMovGF32,
    Add64R,
    LdrSHGr64Indexed,
    StrF64Indexed,
    SMax32R,
    SCvtF64G32,
    LdrSBGr32Literal,
    LdrHGr32Base,
    MirReturn,
    Bic64R,
    ICCmn32R,
    SCvtF64,
    RBit32,
    And32R,
    FCvtAS32F64,
    FNMSub64,
    MAdd64,
    StrHGr64Indexed,
    FCvtAU64,
    MVN64R,
    UXTH32,
    LdrSHGr32Base,
    CNT32,
    FCvtAS64F32,
    UMULL,
    FRIntI64,
    SMin32R,
    LdrGr32Indexed,
    Neg64R,
    FSub64,
    FCvtAS64,
    FRIntZ64X64,
    FSqrt32,
    ORN64R,
    UMNegL,
    FRIntP32,
    FCvtZS64,
    SXTH32,
    FCvtNU32,
    Sub64I,
    FMAdd64,
    StrBGr32,
    LdrHGr64Indexed,
    MovN64,
    FRIntA32,
    StrF32,
    FCvtZS64F32,
    LdrHGr32Literal,
    CTZ64,
    FCvtPS64,
    LdrGr64Literal,
    FMSub32,
    StrGr32Base,
    SMax32I,
    ORR32I,
    Add32R,
    SMin64R,
    StrHGr32Literal,
    FCCmp64,
    MirCopy32,
    StrBGr32Literal,
    StrGr64Base,
    LdrBGr64Literal,
    FAbs64,
    FCvtPS32,
    FAdd64,
    UDiv64,
    FCvtAS32,
    FSqrt64,
    LdrHGr32,
    MirCall,
    FMSub64,
    LdrBGr64Indexed,
    SXTB32,
    Sub32R,
    UMulH,
    FRIntZ64X32,
    Asr32R,
    LdrGr64Base,
    LdrF32,
    Bic32I,
    CTZ32,
    UXTB32,
    LdrSHGr64,
    FCvtMU64F32,
    FCvtZS32,
    LdrHGr64,
    LdrHGr64Literal,
    ICmn64R,
    FCvtZU64F32,
    FNeg32,
    LdrF64,
    FRIntM64,
    FCmpE64,
    FCvt32F64,
    StrHGr32,
    StrGr64Indexed,
    LdrBGr64,
    StrF64Literal,
    EOR64I,
    LdrGr32Literal,
    ICmp32I,
    FRIntX64,
    ORN64I,
    MovN32,
    BCond,
    SXTW32,
    FCvtNS64F32,
    LdrSHGr64Base,
    Lsl64I,
    FCvtNU64,
    SMax64I,
    StrBGr64Base,
    FCmp32,
    FMul64,
    ORR64R,
    FCvtAU64F32,
    FCvtNS64,
    FCvtPS64F32,
    LdrBGr32Indexed,
    StrGr64Literal,
    SMNegL,
    B,
    FCvtNS32,
    Mov64R,
    LdrHGr64Base,
    Lsr64R,
    FCvtZU64,
    Add64I,
    ORN32R,
    UDiv32,
    Ror64I,
    MSub64,
    FRInt64X64,
    LdrSBGr32,
    Add32I,
    Lsr32R,
    BLinkReg,
    UMin64R,
    Abs32R,
    FRIntN32,
    FNMAdd64,
    TBZ,
    Asr32I,
    UXTB64,
    FRIntZ32X64,
    StrGr64,
    LdrBGr32,
    StrBGr32Base,
    FMovGF64,
    StrF64Base,
    StrGr32Literal,
    ICmn32I,
    ICCmn32I,
    LdrF32Literal,
    LoadConst64Symbol,
    ICCmp64R,
    UMax64R,
    ICmn64I,
    Lsr64I,
    FMAdd32,
    StrBGr64Indexed,
    Bic32R,
    ICmp64I,
    FSub32,
    Neg32R,
    FMov64I,
    ICCmn64R,
    MirFCopy32,
    EON64I,
    MovK32,
    Sub64R,
    FCvtPU64F32,
    FRIntZ64,
    FCvtAU32,
    FCvtMU32,
    FCmpE32,
    StrBGr32Indexed,
    Mul64,
    BCCond,
    MirPCopy,
    Adr,
    SDiv32,
    SMax64R,
    FRInt32X64,
    StrGr32,
    CBNZ,
    MovK64,
    Br,
    FCmp64,
    FDiv32,
    Mov64I,
    UMin64I,
    FCvt64F32,
    StrF32Indexed,
    FCvtPU64,
    FRIntA64,
    LdrSBGr32Indexed,
    CNT64,
    FAdd32,
    MirFCopy64,
    LdrGr32,
    LdrSHGr32Literal,
    FRIntX32,
    EON32R,
    StrHGr64,
    BLink,
    FCCmpE64,
    LdrSBGr64,
    SMin64I,
    StrF32Base,
    FCvtZU32,
    FCvtPU32,
    LdrSBGr32Base,
    LdrHGr32Indexed,
    LdrSBGr64Literal,
    FRIntN64,
    Lsl32I,
    ORN32I,
    SDiv64,
    ORR32R,
}
impl MirOP {
    pub fn as_str(&self) -> &'static str {
        match self {
            MirOP::Ror32R => stringify!(Ror32R),
            MirOP::SCvtF32 => stringify!(SCvtF32),
            MirOP::LoadConst64 => stringify!(LoadConst64),
            MirOP::FCvtMS64F32 => stringify!(FCvtMS64F32),
            MirOP::MovZ64 => stringify!(MovZ64),
            MirOP::SMSubL => stringify!(SMSubL),
            MirOP::CBZ => stringify!(CBZ),
            MirOP::And32I => stringify!(And32I),
            MirOP::Mov32R => stringify!(Mov32R),
            MirOP::CLZ64 => stringify!(CLZ64),
            MirOP::FMovFG32 => stringify!(FMovFG32),
            MirOP::FMov32R => stringify!(FMov32R),
            MirOP::UMin32I => stringify!(UMin32I),
            MirOP::Lsl32R => stringify!(Lsl32R),
            MirOP::Bic64I => stringify!(Bic64I),
            MirOP::Asr64R => stringify!(Asr64R),
            MirOP::FCvtMS64 => stringify!(FCvtMS64),
            MirOP::FRInt64X32 => stringify!(FRInt64X32),
            MirOP::SMin32I => stringify!(SMin32I),
            MirOP::UXTH64 => stringify!(UXTH64),
            MirOP::And64I => stringify!(And64I),
            MirOP::StrF64 => stringify!(StrF64),
            MirOP::LdrSBGr64Base => stringify!(LdrSBGr64Base),
            MirOP::FNeg64 => stringify!(FNeg64),
            MirOP::Abs64R => stringify!(Abs64R),
            MirOP::StrF32Literal => stringify!(StrF32Literal),
            MirOP::LdrGr64 => stringify!(LdrGr64),
            MirOP::ICmp64R => stringify!(ICmp64R),
            MirOP::StrGr32Indexed => stringify!(StrGr32Indexed),
            MirOP::StrBGr64Literal => stringify!(StrBGr64Literal),
            MirOP::UMin32R => stringify!(UMin32R),
            MirOP::LdrBGr64Base => stringify!(LdrBGr64Base),
            MirOP::FCCmp32 => stringify!(FCCmp32),
            MirOP::FCvtAU32F64 => stringify!(FCvtAU32F64),
            MirOP::MNeg64 => stringify!(MNeg64),
            MirOP::FMov64R => stringify!(FMov64R),
            MirOP::LdrBGr32Literal => stringify!(LdrBGr32Literal),
            MirOP::FNMul64 => stringify!(FNMul64),
            MirOP::LdrF64Literal => stringify!(LdrF64Literal),
            MirOP::MNeg32 => stringify!(MNeg32),
            MirOP::FRIntZ32X32 => stringify!(FRIntZ32X32),
            MirOP::CLZ32 => stringify!(CLZ32),
            MirOP::ICCmp32R => stringify!(ICCmp32R),
            MirOP::LoadConstF64 => stringify!(LoadConstF64),
            MirOP::FCCmpE32 => stringify!(FCCmpE32),
            MirOP::Ror64R => stringify!(Ror64R),
            MirOP::UMax32R => stringify!(UMax32R),
            MirOP::SMulH => stringify!(SMulH),
            MirOP::MVN32R => stringify!(MVN32R),
            MirOP::Ror32I => stringify!(Ror32I),
            MirOP::FMul32 => stringify!(FMul32),
            MirOP::CLS32 => stringify!(CLS32),
            MirOP::EOR32I => stringify!(EOR32I),
            MirOP::UMAddL => stringify!(UMAddL),
            MirOP::FRIntI32 => stringify!(FRIntI32),
            MirOP::ICCmp64I => stringify!(ICCmp64I),
            MirOP::LdrSBGr64Indexed => stringify!(LdrSBGr64Indexed),
            MirOP::SMULL => stringify!(SMULL),
            MirOP::EOR32R => stringify!(EOR32R),
            MirOP::ORR64I => stringify!(ORR64I),
            MirOP::RBit64 => stringify!(RBit64),
            MirOP::FCvtMS32 => stringify!(FCvtMS32),
            MirOP::LdrGr32Base => stringify!(LdrGr32Base),
            MirOP::LdrSHGr32Indexed => stringify!(LdrSHGr32Indexed),
            MirOP::LdrBGr32Base => stringify!(LdrBGr32Base),
            MirOP::SXTB64 => stringify!(SXTB64),
            MirOP::FMovFG64 => stringify!(FMovFG64),
            MirOP::CLS64 => stringify!(CLS64),
            MirOP::FRInt32X32 => stringify!(FRInt32X32),
            MirOP::MSub32 => stringify!(MSub32),
            MirOP::LdrF64Base => stringify!(LdrF64Base),
            MirOP::LdrSHGr32 => stringify!(LdrSHGr32),
            MirOP::UMax32I => stringify!(UMax32I),
            MirOP::StrBGr64 => stringify!(StrBGr64),
            MirOP::And64R => stringify!(And64R),
            MirOP::LdrF64Indexed => stringify!(LdrF64Indexed),
            MirOP::StrHGr32Indexed => stringify!(StrHGr32Indexed),
            MirOP::ICCmp32I => stringify!(ICCmp32I),
            MirOP::FNMSub32 => stringify!(FNMSub32),
            MirOP::Lsr32I => stringify!(Lsr32I),
            MirOP::FRIntZ32 => stringify!(FRIntZ32),
            MirOP::SXTW64 => stringify!(SXTW64),
            MirOP::MovZ32 => stringify!(MovZ32),
            MirOP::LdrF32Base => stringify!(LdrF32Base),
            MirOP::ICmp32R => stringify!(ICmp32R),
            MirOP::Mov32I => stringify!(Mov32I),
            MirOP::ICmn32R => stringify!(ICmn32R),
            MirOP::TBNZ => stringify!(TBNZ),
            MirOP::SXTH64 => stringify!(SXTH64),
            MirOP::StrHGr64Base => stringify!(StrHGr64Base),
            MirOP::LdrGr64Indexed => stringify!(LdrGr64Indexed),
            MirOP::LdrSHGr64Literal => stringify!(LdrSHGr64Literal),
            MirOP::StrHGr64Literal => stringify!(StrHGr64Literal),
            MirOP::EON32I => stringify!(EON32I),
            MirOP::MirSwitch => stringify!(MirSwitch),
            MirOP::FCvtMU64 => stringify!(FCvtMU64),
            MirOP::FRIntP64 => stringify!(FRIntP64),
            MirOP::StrHGr32Base => stringify!(StrHGr32Base),
            MirOP::SMAddL => stringify!(SMAddL),
            MirOP::FNMul32 => stringify!(FNMul32),
            MirOP::UMax64I => stringify!(UMax64I),
            MirOP::FDiv64 => stringify!(FDiv64),
            MirOP::Lsl64R => stringify!(Lsl64R),
            MirOP::MirCopy64 => stringify!(MirCopy64),
            MirOP::FMov32I => stringify!(FMov32I),
            MirOP::FRIntM32 => stringify!(FRIntM32),
            MirOP::EOR64R => stringify!(EOR64R),
            MirOP::Mul32 => stringify!(Mul32),
            MirOP::Sub32I => stringify!(Sub32I),
            MirOP::AdrP => stringify!(AdrP),
            MirOP::UMSubL => stringify!(UMSubL),
            MirOP::ICCmn64I => stringify!(ICCmn64I),
            MirOP::EON64R => stringify!(EON64R),
            MirOP::FAbs32 => stringify!(FAbs32),
            MirOP::FCvtNU64F32 => stringify!(FCvtNU64F32),
            MirOP::FNMAdd32 => stringify!(FNMAdd32),
            MirOP::LdrF32Indexed => stringify!(LdrF32Indexed),
            MirOP::Asr64I => stringify!(Asr64I),
            MirOP::MAdd32 => stringify!(MAdd32),
            MirOP::FMovGF32 => stringify!(FMovGF32),
            MirOP::Add64R => stringify!(Add64R),
            MirOP::LdrSHGr64Indexed => stringify!(LdrSHGr64Indexed),
            MirOP::StrF64Indexed => stringify!(StrF64Indexed),
            MirOP::SMax32R => stringify!(SMax32R),
            MirOP::SCvtF64G32 => stringify!(SCvtF64G32),
            MirOP::LdrSBGr32Literal => stringify!(LdrSBGr32Literal),
            MirOP::LdrHGr32Base => stringify!(LdrHGr32Base),
            MirOP::MirReturn => stringify!(MirReturn),
            MirOP::Bic64R => stringify!(Bic64R),
            MirOP::ICCmn32R => stringify!(ICCmn32R),
            MirOP::SCvtF64 => stringify!(SCvtF64),
            MirOP::RBit32 => stringify!(RBit32),
            MirOP::And32R => stringify!(And32R),
            MirOP::FCvtAS32F64 => stringify!(FCvtAS32F64),
            MirOP::FNMSub64 => stringify!(FNMSub64),
            MirOP::MAdd64 => stringify!(MAdd64),
            MirOP::StrHGr64Indexed => stringify!(StrHGr64Indexed),
            MirOP::FCvtAU64 => stringify!(FCvtAU64),
            MirOP::MVN64R => stringify!(MVN64R),
            MirOP::UXTH32 => stringify!(UXTH32),
            MirOP::LdrSHGr32Base => stringify!(LdrSHGr32Base),
            MirOP::CNT32 => stringify!(CNT32),
            MirOP::FCvtAS64F32 => stringify!(FCvtAS64F32),
            MirOP::UMULL => stringify!(UMULL),
            MirOP::FRIntI64 => stringify!(FRIntI64),
            MirOP::SMin32R => stringify!(SMin32R),
            MirOP::LdrGr32Indexed => stringify!(LdrGr32Indexed),
            MirOP::Neg64R => stringify!(Neg64R),
            MirOP::FSub64 => stringify!(FSub64),
            MirOP::FCvtAS64 => stringify!(FCvtAS64),
            MirOP::FRIntZ64X64 => stringify!(FRIntZ64X64),
            MirOP::FSqrt32 => stringify!(FSqrt32),
            MirOP::ORN64R => stringify!(ORN64R),
            MirOP::UMNegL => stringify!(UMNegL),
            MirOP::FRIntP32 => stringify!(FRIntP32),
            MirOP::FCvtZS64 => stringify!(FCvtZS64),
            MirOP::SXTH32 => stringify!(SXTH32),
            MirOP::FCvtNU32 => stringify!(FCvtNU32),
            MirOP::Sub64I => stringify!(Sub64I),
            MirOP::FMAdd64 => stringify!(FMAdd64),
            MirOP::StrBGr32 => stringify!(StrBGr32),
            MirOP::LdrHGr64Indexed => stringify!(LdrHGr64Indexed),
            MirOP::MovN64 => stringify!(MovN64),
            MirOP::FRIntA32 => stringify!(FRIntA32),
            MirOP::StrF32 => stringify!(StrF32),
            MirOP::FCvtZS64F32 => stringify!(FCvtZS64F32),
            MirOP::LdrHGr32Literal => stringify!(LdrHGr32Literal),
            MirOP::CTZ64 => stringify!(CTZ64),
            MirOP::FCvtPS64 => stringify!(FCvtPS64),
            MirOP::LdrGr64Literal => stringify!(LdrGr64Literal),
            MirOP::FMSub32 => stringify!(FMSub32),
            MirOP::StrGr32Base => stringify!(StrGr32Base),
            MirOP::SMax32I => stringify!(SMax32I),
            MirOP::ORR32I => stringify!(ORR32I),
            MirOP::Add32R => stringify!(Add32R),
            MirOP::SMin64R => stringify!(SMin64R),
            MirOP::StrHGr32Literal => stringify!(StrHGr32Literal),
            MirOP::FCCmp64 => stringify!(FCCmp64),
            MirOP::MirCopy32 => stringify!(MirCopy32),
            MirOP::StrBGr32Literal => stringify!(StrBGr32Literal),
            MirOP::StrGr64Base => stringify!(StrGr64Base),
            MirOP::LdrBGr64Literal => stringify!(LdrBGr64Literal),
            MirOP::FAbs64 => stringify!(FAbs64),
            MirOP::FCvtPS32 => stringify!(FCvtPS32),
            MirOP::FAdd64 => stringify!(FAdd64),
            MirOP::UDiv64 => stringify!(UDiv64),
            MirOP::FCvtAS32 => stringify!(FCvtAS32),
            MirOP::FSqrt64 => stringify!(FSqrt64),
            MirOP::LdrHGr32 => stringify!(LdrHGr32),
            MirOP::MirCall => stringify!(MirCall),
            MirOP::FMSub64 => stringify!(FMSub64),
            MirOP::LdrBGr64Indexed => stringify!(LdrBGr64Indexed),
            MirOP::SXTB32 => stringify!(SXTB32),
            MirOP::Sub32R => stringify!(Sub32R),
            MirOP::UMulH => stringify!(UMulH),
            MirOP::FRIntZ64X32 => stringify!(FRIntZ64X32),
            MirOP::Asr32R => stringify!(Asr32R),
            MirOP::LdrGr64Base => stringify!(LdrGr64Base),
            MirOP::LdrF32 => stringify!(LdrF32),
            MirOP::Bic32I => stringify!(Bic32I),
            MirOP::CTZ32 => stringify!(CTZ32),
            MirOP::UXTB32 => stringify!(UXTB32),
            MirOP::LdrSHGr64 => stringify!(LdrSHGr64),
            MirOP::FCvtMU64F32 => stringify!(FCvtMU64F32),
            MirOP::FCvtZS32 => stringify!(FCvtZS32),
            MirOP::LdrHGr64 => stringify!(LdrHGr64),
            MirOP::LdrHGr64Literal => stringify!(LdrHGr64Literal),
            MirOP::ICmn64R => stringify!(ICmn64R),
            MirOP::FCvtZU64F32 => stringify!(FCvtZU64F32),
            MirOP::FNeg32 => stringify!(FNeg32),
            MirOP::LdrF64 => stringify!(LdrF64),
            MirOP::FRIntM64 => stringify!(FRIntM64),
            MirOP::FCmpE64 => stringify!(FCmpE64),
            MirOP::FCvt32F64 => stringify!(FCvt32F64),
            MirOP::StrHGr32 => stringify!(StrHGr32),
            MirOP::StrGr64Indexed => stringify!(StrGr64Indexed),
            MirOP::LdrBGr64 => stringify!(LdrBGr64),
            MirOP::StrF64Literal => stringify!(StrF64Literal),
            MirOP::EOR64I => stringify!(EOR64I),
            MirOP::LdrGr32Literal => stringify!(LdrGr32Literal),
            MirOP::ICmp32I => stringify!(ICmp32I),
            MirOP::FRIntX64 => stringify!(FRIntX64),
            MirOP::ORN64I => stringify!(ORN64I),
            MirOP::MovN32 => stringify!(MovN32),
            MirOP::BCond => stringify!(BCond),
            MirOP::SXTW32 => stringify!(SXTW32),
            MirOP::FCvtNS64F32 => stringify!(FCvtNS64F32),
            MirOP::LdrSHGr64Base => stringify!(LdrSHGr64Base),
            MirOP::Lsl64I => stringify!(Lsl64I),
            MirOP::FCvtNU64 => stringify!(FCvtNU64),
            MirOP::SMax64I => stringify!(SMax64I),
            MirOP::StrBGr64Base => stringify!(StrBGr64Base),
            MirOP::FCmp32 => stringify!(FCmp32),
            MirOP::FMul64 => stringify!(FMul64),
            MirOP::ORR64R => stringify!(ORR64R),
            MirOP::FCvtAU64F32 => stringify!(FCvtAU64F32),
            MirOP::FCvtNS64 => stringify!(FCvtNS64),
            MirOP::FCvtPS64F32 => stringify!(FCvtPS64F32),
            MirOP::LdrBGr32Indexed => stringify!(LdrBGr32Indexed),
            MirOP::StrGr64Literal => stringify!(StrGr64Literal),
            MirOP::SMNegL => stringify!(SMNegL),
            MirOP::B => stringify!(B),
            MirOP::FCvtNS32 => stringify!(FCvtNS32),
            MirOP::Mov64R => stringify!(Mov64R),
            MirOP::LdrHGr64Base => stringify!(LdrHGr64Base),
            MirOP::Lsr64R => stringify!(Lsr64R),
            MirOP::FCvtZU64 => stringify!(FCvtZU64),
            MirOP::Add64I => stringify!(Add64I),
            MirOP::ORN32R => stringify!(ORN32R),
            MirOP::UDiv32 => stringify!(UDiv32),
            MirOP::Ror64I => stringify!(Ror64I),
            MirOP::MSub64 => stringify!(MSub64),
            MirOP::FRInt64X64 => stringify!(FRInt64X64),
            MirOP::LdrSBGr32 => stringify!(LdrSBGr32),
            MirOP::Add32I => stringify!(Add32I),
            MirOP::Lsr32R => stringify!(Lsr32R),
            MirOP::BLinkReg => stringify!(BLinkReg),
            MirOP::UMin64R => stringify!(UMin64R),
            MirOP::Abs32R => stringify!(Abs32R),
            MirOP::FRIntN32 => stringify!(FRIntN32),
            MirOP::FNMAdd64 => stringify!(FNMAdd64),
            MirOP::TBZ => stringify!(TBZ),
            MirOP::Asr32I => stringify!(Asr32I),
            MirOP::UXTB64 => stringify!(UXTB64),
            MirOP::FRIntZ32X64 => stringify!(FRIntZ32X64),
            MirOP::StrGr64 => stringify!(StrGr64),
            MirOP::LdrBGr32 => stringify!(LdrBGr32),
            MirOP::StrBGr32Base => stringify!(StrBGr32Base),
            MirOP::FMovGF64 => stringify!(FMovGF64),
            MirOP::StrF64Base => stringify!(StrF64Base),
            MirOP::StrGr32Literal => stringify!(StrGr32Literal),
            MirOP::ICmn32I => stringify!(ICmn32I),
            MirOP::ICCmn32I => stringify!(ICCmn32I),
            MirOP::LdrF32Literal => stringify!(LdrF32Literal),
            MirOP::LoadConst64Symbol => stringify!(LoadConst64Symbol),
            MirOP::ICCmp64R => stringify!(ICCmp64R),
            MirOP::UMax64R => stringify!(UMax64R),
            MirOP::ICmn64I => stringify!(ICmn64I),
            MirOP::Lsr64I => stringify!(Lsr64I),
            MirOP::FMAdd32 => stringify!(FMAdd32),
            MirOP::StrBGr64Indexed => stringify!(StrBGr64Indexed),
            MirOP::Bic32R => stringify!(Bic32R),
            MirOP::ICmp64I => stringify!(ICmp64I),
            MirOP::FSub32 => stringify!(FSub32),
            MirOP::Neg32R => stringify!(Neg32R),
            MirOP::FMov64I => stringify!(FMov64I),
            MirOP::ICCmn64R => stringify!(ICCmn64R),
            MirOP::MirFCopy32 => stringify!(MirFCopy32),
            MirOP::EON64I => stringify!(EON64I),
            MirOP::MovK32 => stringify!(MovK32),
            MirOP::Sub64R => stringify!(Sub64R),
            MirOP::FCvtPU64F32 => stringify!(FCvtPU64F32),
            MirOP::FRIntZ64 => stringify!(FRIntZ64),
            MirOP::FCvtAU32 => stringify!(FCvtAU32),
            MirOP::FCvtMU32 => stringify!(FCvtMU32),
            MirOP::FCmpE32 => stringify!(FCmpE32),
            MirOP::StrBGr32Indexed => stringify!(StrBGr32Indexed),
            MirOP::Mul64 => stringify!(Mul64),
            MirOP::BCCond => stringify!(BCCond),
            MirOP::MirPCopy => stringify!(MirPCopy),
            MirOP::Adr => stringify!(Adr),
            MirOP::SDiv32 => stringify!(SDiv32),
            MirOP::SMax64R => stringify!(SMax64R),
            MirOP::FRInt32X64 => stringify!(FRInt32X64),
            MirOP::StrGr32 => stringify!(StrGr32),
            MirOP::CBNZ => stringify!(CBNZ),
            MirOP::MovK64 => stringify!(MovK64),
            MirOP::Br => stringify!(Br),
            MirOP::FCmp64 => stringify!(FCmp64),
            MirOP::FDiv32 => stringify!(FDiv32),
            MirOP::Mov64I => stringify!(Mov64I),
            MirOP::UMin64I => stringify!(UMin64I),
            MirOP::FCvt64F32 => stringify!(FCvt64F32),
            MirOP::StrF32Indexed => stringify!(StrF32Indexed),
            MirOP::FCvtPU64 => stringify!(FCvtPU64),
            MirOP::FRIntA64 => stringify!(FRIntA64),
            MirOP::LdrSBGr32Indexed => stringify!(LdrSBGr32Indexed),
            MirOP::CNT64 => stringify!(CNT64),
            MirOP::FAdd32 => stringify!(FAdd32),
            MirOP::MirFCopy64 => stringify!(MirFCopy64),
            MirOP::LdrGr32 => stringify!(LdrGr32),
            MirOP::LdrSHGr32Literal => stringify!(LdrSHGr32Literal),
            MirOP::FRIntX32 => stringify!(FRIntX32),
            MirOP::EON32R => stringify!(EON32R),
            MirOP::StrHGr64 => stringify!(StrHGr64),
            MirOP::BLink => stringify!(BLink),
            MirOP::FCCmpE64 => stringify!(FCCmpE64),
            MirOP::LdrSBGr64 => stringify!(LdrSBGr64),
            MirOP::SMin64I => stringify!(SMin64I),
            MirOP::StrF32Base => stringify!(StrF32Base),
            MirOP::FCvtZU32 => stringify!(FCvtZU32),
            MirOP::FCvtPU32 => stringify!(FCvtPU32),
            MirOP::LdrSBGr32Base => stringify!(LdrSBGr32Base),
            MirOP::LdrHGr32Indexed => stringify!(LdrHGr32Indexed),
            MirOP::LdrSBGr64Literal => stringify!(LdrSBGr64Literal),
            MirOP::FRIntN64 => stringify!(FRIntN64),
            MirOP::Lsl32I => stringify!(Lsl32I),
            MirOP::ORN32I => stringify!(ORN32I),
            MirOP::SDiv64 => stringify!(SDiv64),
            MirOP::ORR32R => stringify!(ORR32R),
        }
    }
}
impl std::fmt::Display for MirOP {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{}", self.as_str())
    }
}
impl std::str::FromStr for MirOP {
    type Err = String;
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            stringify!(Ror32R) => Ok(MirOP::Ror32R),
            stringify!(SCvtF32) => Ok(MirOP::SCvtF32),
            stringify!(LoadConst64) => Ok(MirOP::LoadConst64),
            stringify!(FCvtMS64F32) => Ok(MirOP::FCvtMS64F32),
            stringify!(MovZ64) => Ok(MirOP::MovZ64),
            stringify!(SMSubL) => Ok(MirOP::SMSubL),
            stringify!(CBZ) => Ok(MirOP::CBZ),
            stringify!(And32I) => Ok(MirOP::And32I),
            stringify!(Mov32R) => Ok(MirOP::Mov32R),
            stringify!(CLZ64) => Ok(MirOP::CLZ64),
            stringify!(FMovFG32) => Ok(MirOP::FMovFG32),
            stringify!(FMov32R) => Ok(MirOP::FMov32R),
            stringify!(UMin32I) => Ok(MirOP::UMin32I),
            stringify!(Lsl32R) => Ok(MirOP::Lsl32R),
            stringify!(Bic64I) => Ok(MirOP::Bic64I),
            stringify!(Asr64R) => Ok(MirOP::Asr64R),
            stringify!(FCvtMS64) => Ok(MirOP::FCvtMS64),
            stringify!(FRInt64X32) => Ok(MirOP::FRInt64X32),
            stringify!(SMin32I) => Ok(MirOP::SMin32I),
            stringify!(UXTH64) => Ok(MirOP::UXTH64),
            stringify!(And64I) => Ok(MirOP::And64I),
            stringify!(StrF64) => Ok(MirOP::StrF64),
            stringify!(LdrSBGr64Base) => Ok(MirOP::LdrSBGr64Base),
            stringify!(FNeg64) => Ok(MirOP::FNeg64),
            stringify!(Abs64R) => Ok(MirOP::Abs64R),
            stringify!(StrF32Literal) => Ok(MirOP::StrF32Literal),
            stringify!(LdrGr64) => Ok(MirOP::LdrGr64),
            stringify!(ICmp64R) => Ok(MirOP::ICmp64R),
            stringify!(StrGr32Indexed) => Ok(MirOP::StrGr32Indexed),
            stringify!(StrBGr64Literal) => Ok(MirOP::StrBGr64Literal),
            stringify!(UMin32R) => Ok(MirOP::UMin32R),
            stringify!(LdrBGr64Base) => Ok(MirOP::LdrBGr64Base),
            stringify!(FCCmp32) => Ok(MirOP::FCCmp32),
            stringify!(FCvtAU32F64) => Ok(MirOP::FCvtAU32F64),
            stringify!(MNeg64) => Ok(MirOP::MNeg64),
            stringify!(FMov64R) => Ok(MirOP::FMov64R),
            stringify!(LdrBGr32Literal) => Ok(MirOP::LdrBGr32Literal),
            stringify!(FNMul64) => Ok(MirOP::FNMul64),
            stringify!(LdrF64Literal) => Ok(MirOP::LdrF64Literal),
            stringify!(MNeg32) => Ok(MirOP::MNeg32),
            stringify!(FRIntZ32X32) => Ok(MirOP::FRIntZ32X32),
            stringify!(CLZ32) => Ok(MirOP::CLZ32),
            stringify!(ICCmp32R) => Ok(MirOP::ICCmp32R),
            stringify!(LoadConstF64) => Ok(MirOP::LoadConstF64),
            stringify!(FCCmpE32) => Ok(MirOP::FCCmpE32),
            stringify!(Ror64R) => Ok(MirOP::Ror64R),
            stringify!(UMax32R) => Ok(MirOP::UMax32R),
            stringify!(SMulH) => Ok(MirOP::SMulH),
            stringify!(MVN32R) => Ok(MirOP::MVN32R),
            stringify!(Ror32I) => Ok(MirOP::Ror32I),
            stringify!(FMul32) => Ok(MirOP::FMul32),
            stringify!(CLS32) => Ok(MirOP::CLS32),
            stringify!(EOR32I) => Ok(MirOP::EOR32I),
            stringify!(UMAddL) => Ok(MirOP::UMAddL),
            stringify!(FRIntI32) => Ok(MirOP::FRIntI32),
            stringify!(ICCmp64I) => Ok(MirOP::ICCmp64I),
            stringify!(LdrSBGr64Indexed) => Ok(MirOP::LdrSBGr64Indexed),
            stringify!(SMULL) => Ok(MirOP::SMULL),
            stringify!(EOR32R) => Ok(MirOP::EOR32R),
            stringify!(ORR64I) => Ok(MirOP::ORR64I),
            stringify!(RBit64) => Ok(MirOP::RBit64),
            stringify!(FCvtMS32) => Ok(MirOP::FCvtMS32),
            stringify!(LdrGr32Base) => Ok(MirOP::LdrGr32Base),
            stringify!(LdrSHGr32Indexed) => Ok(MirOP::LdrSHGr32Indexed),
            stringify!(LdrBGr32Base) => Ok(MirOP::LdrBGr32Base),
            stringify!(SXTB64) => Ok(MirOP::SXTB64),
            stringify!(FMovFG64) => Ok(MirOP::FMovFG64),
            stringify!(CLS64) => Ok(MirOP::CLS64),
            stringify!(FRInt32X32) => Ok(MirOP::FRInt32X32),
            stringify!(MSub32) => Ok(MirOP::MSub32),
            stringify!(LdrF64Base) => Ok(MirOP::LdrF64Base),
            stringify!(LdrSHGr32) => Ok(MirOP::LdrSHGr32),
            stringify!(UMax32I) => Ok(MirOP::UMax32I),
            stringify!(StrBGr64) => Ok(MirOP::StrBGr64),
            stringify!(And64R) => Ok(MirOP::And64R),
            stringify!(LdrF64Indexed) => Ok(MirOP::LdrF64Indexed),
            stringify!(StrHGr32Indexed) => Ok(MirOP::StrHGr32Indexed),
            stringify!(ICCmp32I) => Ok(MirOP::ICCmp32I),
            stringify!(FNMSub32) => Ok(MirOP::FNMSub32),
            stringify!(Lsr32I) => Ok(MirOP::Lsr32I),
            stringify!(FRIntZ32) => Ok(MirOP::FRIntZ32),
            stringify!(SXTW64) => Ok(MirOP::SXTW64),
            stringify!(MovZ32) => Ok(MirOP::MovZ32),
            stringify!(LdrF32Base) => Ok(MirOP::LdrF32Base),
            stringify!(ICmp32R) => Ok(MirOP::ICmp32R),
            stringify!(Mov32I) => Ok(MirOP::Mov32I),
            stringify!(ICmn32R) => Ok(MirOP::ICmn32R),
            stringify!(TBNZ) => Ok(MirOP::TBNZ),
            stringify!(SXTH64) => Ok(MirOP::SXTH64),
            stringify!(StrHGr64Base) => Ok(MirOP::StrHGr64Base),
            stringify!(LdrGr64Indexed) => Ok(MirOP::LdrGr64Indexed),
            stringify!(LdrSHGr64Literal) => Ok(MirOP::LdrSHGr64Literal),
            stringify!(StrHGr64Literal) => Ok(MirOP::StrHGr64Literal),
            stringify!(EON32I) => Ok(MirOP::EON32I),
            stringify!(MirSwitch) => Ok(MirOP::MirSwitch),
            stringify!(FCvtMU64) => Ok(MirOP::FCvtMU64),
            stringify!(FRIntP64) => Ok(MirOP::FRIntP64),
            stringify!(StrHGr32Base) => Ok(MirOP::StrHGr32Base),
            stringify!(SMAddL) => Ok(MirOP::SMAddL),
            stringify!(FNMul32) => Ok(MirOP::FNMul32),
            stringify!(UMax64I) => Ok(MirOP::UMax64I),
            stringify!(FDiv64) => Ok(MirOP::FDiv64),
            stringify!(Lsl64R) => Ok(MirOP::Lsl64R),
            stringify!(MirCopy64) => Ok(MirOP::MirCopy64),
            stringify!(FMov32I) => Ok(MirOP::FMov32I),
            stringify!(FRIntM32) => Ok(MirOP::FRIntM32),
            stringify!(EOR64R) => Ok(MirOP::EOR64R),
            stringify!(Mul32) => Ok(MirOP::Mul32),
            stringify!(Sub32I) => Ok(MirOP::Sub32I),
            stringify!(AdrP) => Ok(MirOP::AdrP),
            stringify!(UMSubL) => Ok(MirOP::UMSubL),
            stringify!(ICCmn64I) => Ok(MirOP::ICCmn64I),
            stringify!(EON64R) => Ok(MirOP::EON64R),
            stringify!(FAbs32) => Ok(MirOP::FAbs32),
            stringify!(FCvtNU64F32) => Ok(MirOP::FCvtNU64F32),
            stringify!(FNMAdd32) => Ok(MirOP::FNMAdd32),
            stringify!(LdrF32Indexed) => Ok(MirOP::LdrF32Indexed),
            stringify!(Asr64I) => Ok(MirOP::Asr64I),
            stringify!(MAdd32) => Ok(MirOP::MAdd32),
            stringify!(FMovGF32) => Ok(MirOP::FMovGF32),
            stringify!(Add64R) => Ok(MirOP::Add64R),
            stringify!(LdrSHGr64Indexed) => Ok(MirOP::LdrSHGr64Indexed),
            stringify!(StrF64Indexed) => Ok(MirOP::StrF64Indexed),
            stringify!(SMax32R) => Ok(MirOP::SMax32R),
            stringify!(SCvtF64G32) => Ok(MirOP::SCvtF64G32),
            stringify!(LdrSBGr32Literal) => Ok(MirOP::LdrSBGr32Literal),
            stringify!(LdrHGr32Base) => Ok(MirOP::LdrHGr32Base),
            stringify!(MirReturn) => Ok(MirOP::MirReturn),
            stringify!(Bic64R) => Ok(MirOP::Bic64R),
            stringify!(ICCmn32R) => Ok(MirOP::ICCmn32R),
            stringify!(SCvtF64) => Ok(MirOP::SCvtF64),
            stringify!(RBit32) => Ok(MirOP::RBit32),
            stringify!(And32R) => Ok(MirOP::And32R),
            stringify!(FCvtAS32F64) => Ok(MirOP::FCvtAS32F64),
            stringify!(FNMSub64) => Ok(MirOP::FNMSub64),
            stringify!(MAdd64) => Ok(MirOP::MAdd64),
            stringify!(StrHGr64Indexed) => Ok(MirOP::StrHGr64Indexed),
            stringify!(FCvtAU64) => Ok(MirOP::FCvtAU64),
            stringify!(MVN64R) => Ok(MirOP::MVN64R),
            stringify!(UXTH32) => Ok(MirOP::UXTH32),
            stringify!(LdrSHGr32Base) => Ok(MirOP::LdrSHGr32Base),
            stringify!(CNT32) => Ok(MirOP::CNT32),
            stringify!(FCvtAS64F32) => Ok(MirOP::FCvtAS64F32),
            stringify!(UMULL) => Ok(MirOP::UMULL),
            stringify!(FRIntI64) => Ok(MirOP::FRIntI64),
            stringify!(SMin32R) => Ok(MirOP::SMin32R),
            stringify!(LdrGr32Indexed) => Ok(MirOP::LdrGr32Indexed),
            stringify!(Neg64R) => Ok(MirOP::Neg64R),
            stringify!(FSub64) => Ok(MirOP::FSub64),
            stringify!(FCvtAS64) => Ok(MirOP::FCvtAS64),
            stringify!(FRIntZ64X64) => Ok(MirOP::FRIntZ64X64),
            stringify!(FSqrt32) => Ok(MirOP::FSqrt32),
            stringify!(ORN64R) => Ok(MirOP::ORN64R),
            stringify!(UMNegL) => Ok(MirOP::UMNegL),
            stringify!(FRIntP32) => Ok(MirOP::FRIntP32),
            stringify!(FCvtZS64) => Ok(MirOP::FCvtZS64),
            stringify!(SXTH32) => Ok(MirOP::SXTH32),
            stringify!(FCvtNU32) => Ok(MirOP::FCvtNU32),
            stringify!(Sub64I) => Ok(MirOP::Sub64I),
            stringify!(FMAdd64) => Ok(MirOP::FMAdd64),
            stringify!(StrBGr32) => Ok(MirOP::StrBGr32),
            stringify!(LdrHGr64Indexed) => Ok(MirOP::LdrHGr64Indexed),
            stringify!(MovN64) => Ok(MirOP::MovN64),
            stringify!(FRIntA32) => Ok(MirOP::FRIntA32),
            stringify!(StrF32) => Ok(MirOP::StrF32),
            stringify!(FCvtZS64F32) => Ok(MirOP::FCvtZS64F32),
            stringify!(LdrHGr32Literal) => Ok(MirOP::LdrHGr32Literal),
            stringify!(CTZ64) => Ok(MirOP::CTZ64),
            stringify!(FCvtPS64) => Ok(MirOP::FCvtPS64),
            stringify!(LdrGr64Literal) => Ok(MirOP::LdrGr64Literal),
            stringify!(FMSub32) => Ok(MirOP::FMSub32),
            stringify!(StrGr32Base) => Ok(MirOP::StrGr32Base),
            stringify!(SMax32I) => Ok(MirOP::SMax32I),
            stringify!(ORR32I) => Ok(MirOP::ORR32I),
            stringify!(Add32R) => Ok(MirOP::Add32R),
            stringify!(SMin64R) => Ok(MirOP::SMin64R),
            stringify!(StrHGr32Literal) => Ok(MirOP::StrHGr32Literal),
            stringify!(FCCmp64) => Ok(MirOP::FCCmp64),
            stringify!(MirCopy32) => Ok(MirOP::MirCopy32),
            stringify!(StrBGr32Literal) => Ok(MirOP::StrBGr32Literal),
            stringify!(StrGr64Base) => Ok(MirOP::StrGr64Base),
            stringify!(LdrBGr64Literal) => Ok(MirOP::LdrBGr64Literal),
            stringify!(FAbs64) => Ok(MirOP::FAbs64),
            stringify!(FCvtPS32) => Ok(MirOP::FCvtPS32),
            stringify!(FAdd64) => Ok(MirOP::FAdd64),
            stringify!(UDiv64) => Ok(MirOP::UDiv64),
            stringify!(FCvtAS32) => Ok(MirOP::FCvtAS32),
            stringify!(FSqrt64) => Ok(MirOP::FSqrt64),
            stringify!(LdrHGr32) => Ok(MirOP::LdrHGr32),
            stringify!(MirCall) => Ok(MirOP::MirCall),
            stringify!(FMSub64) => Ok(MirOP::FMSub64),
            stringify!(LdrBGr64Indexed) => Ok(MirOP::LdrBGr64Indexed),
            stringify!(SXTB32) => Ok(MirOP::SXTB32),
            stringify!(Sub32R) => Ok(MirOP::Sub32R),
            stringify!(UMulH) => Ok(MirOP::UMulH),
            stringify!(FRIntZ64X32) => Ok(MirOP::FRIntZ64X32),
            stringify!(Asr32R) => Ok(MirOP::Asr32R),
            stringify!(LdrGr64Base) => Ok(MirOP::LdrGr64Base),
            stringify!(LdrF32) => Ok(MirOP::LdrF32),
            stringify!(Bic32I) => Ok(MirOP::Bic32I),
            stringify!(CTZ32) => Ok(MirOP::CTZ32),
            stringify!(UXTB32) => Ok(MirOP::UXTB32),
            stringify!(LdrSHGr64) => Ok(MirOP::LdrSHGr64),
            stringify!(FCvtMU64F32) => Ok(MirOP::FCvtMU64F32),
            stringify!(FCvtZS32) => Ok(MirOP::FCvtZS32),
            stringify!(LdrHGr64) => Ok(MirOP::LdrHGr64),
            stringify!(LdrHGr64Literal) => Ok(MirOP::LdrHGr64Literal),
            stringify!(ICmn64R) => Ok(MirOP::ICmn64R),
            stringify!(FCvtZU64F32) => Ok(MirOP::FCvtZU64F32),
            stringify!(FNeg32) => Ok(MirOP::FNeg32),
            stringify!(LdrF64) => Ok(MirOP::LdrF64),
            stringify!(FRIntM64) => Ok(MirOP::FRIntM64),
            stringify!(FCmpE64) => Ok(MirOP::FCmpE64),
            stringify!(FCvt32F64) => Ok(MirOP::FCvt32F64),
            stringify!(StrHGr32) => Ok(MirOP::StrHGr32),
            stringify!(StrGr64Indexed) => Ok(MirOP::StrGr64Indexed),
            stringify!(LdrBGr64) => Ok(MirOP::LdrBGr64),
            stringify!(StrF64Literal) => Ok(MirOP::StrF64Literal),
            stringify!(EOR64I) => Ok(MirOP::EOR64I),
            stringify!(LdrGr32Literal) => Ok(MirOP::LdrGr32Literal),
            stringify!(ICmp32I) => Ok(MirOP::ICmp32I),
            stringify!(FRIntX64) => Ok(MirOP::FRIntX64),
            stringify!(ORN64I) => Ok(MirOP::ORN64I),
            stringify!(MovN32) => Ok(MirOP::MovN32),
            stringify!(BCond) => Ok(MirOP::BCond),
            stringify!(SXTW32) => Ok(MirOP::SXTW32),
            stringify!(FCvtNS64F32) => Ok(MirOP::FCvtNS64F32),
            stringify!(LdrSHGr64Base) => Ok(MirOP::LdrSHGr64Base),
            stringify!(Lsl64I) => Ok(MirOP::Lsl64I),
            stringify!(FCvtNU64) => Ok(MirOP::FCvtNU64),
            stringify!(SMax64I) => Ok(MirOP::SMax64I),
            stringify!(StrBGr64Base) => Ok(MirOP::StrBGr64Base),
            stringify!(FCmp32) => Ok(MirOP::FCmp32),
            stringify!(FMul64) => Ok(MirOP::FMul64),
            stringify!(ORR64R) => Ok(MirOP::ORR64R),
            stringify!(FCvtAU64F32) => Ok(MirOP::FCvtAU64F32),
            stringify!(FCvtNS64) => Ok(MirOP::FCvtNS64),
            stringify!(FCvtPS64F32) => Ok(MirOP::FCvtPS64F32),
            stringify!(LdrBGr32Indexed) => Ok(MirOP::LdrBGr32Indexed),
            stringify!(StrGr64Literal) => Ok(MirOP::StrGr64Literal),
            stringify!(SMNegL) => Ok(MirOP::SMNegL),
            stringify!(B) => Ok(MirOP::B),
            stringify!(FCvtNS32) => Ok(MirOP::FCvtNS32),
            stringify!(Mov64R) => Ok(MirOP::Mov64R),
            stringify!(LdrHGr64Base) => Ok(MirOP::LdrHGr64Base),
            stringify!(Lsr64R) => Ok(MirOP::Lsr64R),
            stringify!(FCvtZU64) => Ok(MirOP::FCvtZU64),
            stringify!(Add64I) => Ok(MirOP::Add64I),
            stringify!(ORN32R) => Ok(MirOP::ORN32R),
            stringify!(UDiv32) => Ok(MirOP::UDiv32),
            stringify!(Ror64I) => Ok(MirOP::Ror64I),
            stringify!(MSub64) => Ok(MirOP::MSub64),
            stringify!(FRInt64X64) => Ok(MirOP::FRInt64X64),
            stringify!(LdrSBGr32) => Ok(MirOP::LdrSBGr32),
            stringify!(Add32I) => Ok(MirOP::Add32I),
            stringify!(Lsr32R) => Ok(MirOP::Lsr32R),
            stringify!(BLinkReg) => Ok(MirOP::BLinkReg),
            stringify!(UMin64R) => Ok(MirOP::UMin64R),
            stringify!(Abs32R) => Ok(MirOP::Abs32R),
            stringify!(FRIntN32) => Ok(MirOP::FRIntN32),
            stringify!(FNMAdd64) => Ok(MirOP::FNMAdd64),
            stringify!(TBZ) => Ok(MirOP::TBZ),
            stringify!(Asr32I) => Ok(MirOP::Asr32I),
            stringify!(UXTB64) => Ok(MirOP::UXTB64),
            stringify!(FRIntZ32X64) => Ok(MirOP::FRIntZ32X64),
            stringify!(StrGr64) => Ok(MirOP::StrGr64),
            stringify!(LdrBGr32) => Ok(MirOP::LdrBGr32),
            stringify!(StrBGr32Base) => Ok(MirOP::StrBGr32Base),
            stringify!(FMovGF64) => Ok(MirOP::FMovGF64),
            stringify!(StrF64Base) => Ok(MirOP::StrF64Base),
            stringify!(StrGr32Literal) => Ok(MirOP::StrGr32Literal),
            stringify!(ICmn32I) => Ok(MirOP::ICmn32I),
            stringify!(ICCmn32I) => Ok(MirOP::ICCmn32I),
            stringify!(LdrF32Literal) => Ok(MirOP::LdrF32Literal),
            stringify!(LoadConst64Symbol) => Ok(MirOP::LoadConst64Symbol),
            stringify!(ICCmp64R) => Ok(MirOP::ICCmp64R),
            stringify!(UMax64R) => Ok(MirOP::UMax64R),
            stringify!(ICmn64I) => Ok(MirOP::ICmn64I),
            stringify!(Lsr64I) => Ok(MirOP::Lsr64I),
            stringify!(FMAdd32) => Ok(MirOP::FMAdd32),
            stringify!(StrBGr64Indexed) => Ok(MirOP::StrBGr64Indexed),
            stringify!(Bic32R) => Ok(MirOP::Bic32R),
            stringify!(ICmp64I) => Ok(MirOP::ICmp64I),
            stringify!(FSub32) => Ok(MirOP::FSub32),
            stringify!(Neg32R) => Ok(MirOP::Neg32R),
            stringify!(FMov64I) => Ok(MirOP::FMov64I),
            stringify!(ICCmn64R) => Ok(MirOP::ICCmn64R),
            stringify!(MirFCopy32) => Ok(MirOP::MirFCopy32),
            stringify!(EON64I) => Ok(MirOP::EON64I),
            stringify!(MovK32) => Ok(MirOP::MovK32),
            stringify!(Sub64R) => Ok(MirOP::Sub64R),
            stringify!(FCvtPU64F32) => Ok(MirOP::FCvtPU64F32),
            stringify!(FRIntZ64) => Ok(MirOP::FRIntZ64),
            stringify!(FCvtAU32) => Ok(MirOP::FCvtAU32),
            stringify!(FCvtMU32) => Ok(MirOP::FCvtMU32),
            stringify!(FCmpE32) => Ok(MirOP::FCmpE32),
            stringify!(StrBGr32Indexed) => Ok(MirOP::StrBGr32Indexed),
            stringify!(Mul64) => Ok(MirOP::Mul64),
            stringify!(BCCond) => Ok(MirOP::BCCond),
            stringify!(MirPCopy) => Ok(MirOP::MirPCopy),
            stringify!(Adr) => Ok(MirOP::Adr),
            stringify!(SDiv32) => Ok(MirOP::SDiv32),
            stringify!(SMax64R) => Ok(MirOP::SMax64R),
            stringify!(FRInt32X64) => Ok(MirOP::FRInt32X64),
            stringify!(StrGr32) => Ok(MirOP::StrGr32),
            stringify!(CBNZ) => Ok(MirOP::CBNZ),
            stringify!(MovK64) => Ok(MirOP::MovK64),
            stringify!(Br) => Ok(MirOP::Br),
            stringify!(FCmp64) => Ok(MirOP::FCmp64),
            stringify!(FDiv32) => Ok(MirOP::FDiv32),
            stringify!(Mov64I) => Ok(MirOP::Mov64I),
            stringify!(UMin64I) => Ok(MirOP::UMin64I),
            stringify!(FCvt64F32) => Ok(MirOP::FCvt64F32),
            stringify!(StrF32Indexed) => Ok(MirOP::StrF32Indexed),
            stringify!(FCvtPU64) => Ok(MirOP::FCvtPU64),
            stringify!(FRIntA64) => Ok(MirOP::FRIntA64),
            stringify!(LdrSBGr32Indexed) => Ok(MirOP::LdrSBGr32Indexed),
            stringify!(CNT64) => Ok(MirOP::CNT64),
            stringify!(FAdd32) => Ok(MirOP::FAdd32),
            stringify!(MirFCopy64) => Ok(MirOP::MirFCopy64),
            stringify!(LdrGr32) => Ok(MirOP::LdrGr32),
            stringify!(LdrSHGr32Literal) => Ok(MirOP::LdrSHGr32Literal),
            stringify!(FRIntX32) => Ok(MirOP::FRIntX32),
            stringify!(EON32R) => Ok(MirOP::EON32R),
            stringify!(StrHGr64) => Ok(MirOP::StrHGr64),
            stringify!(BLink) => Ok(MirOP::BLink),
            stringify!(FCCmpE64) => Ok(MirOP::FCCmpE64),
            stringify!(LdrSBGr64) => Ok(MirOP::LdrSBGr64),
            stringify!(SMin64I) => Ok(MirOP::SMin64I),
            stringify!(StrF32Base) => Ok(MirOP::StrF32Base),
            stringify!(FCvtZU32) => Ok(MirOP::FCvtZU32),
            stringify!(FCvtPU32) => Ok(MirOP::FCvtPU32),
            stringify!(LdrSBGr32Base) => Ok(MirOP::LdrSBGr32Base),
            stringify!(LdrHGr32Indexed) => Ok(MirOP::LdrHGr32Indexed),
            stringify!(LdrSBGr64Literal) => Ok(MirOP::LdrSBGr64Literal),
            stringify!(FRIntN64) => Ok(MirOP::FRIntN64),
            stringify!(Lsl32I) => Ok(MirOP::Lsl32I),
            stringify!(ORN32I) => Ok(MirOP::ORN32I),
            stringify!(SDiv64) => Ok(MirOP::SDiv64),
            stringify!(ORR32R) => Ok(MirOP::ORR32R),
            _ => Err(format!("Unknown opcode: {}", s)),
        }
    }
}
